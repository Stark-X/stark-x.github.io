<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Stark-X&#39;s Blog</title>
  
  <subtitle>Beneath this blog there is an idea</subtitle>
  <link href="https://blog.stark-x.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.stark-x.cn/"/>
  <updated>2022-04-10T13:43:38.872Z</updated>
  <id>https://blog.stark-x.cn/</id>
  
  <author>
    <name>Stark-X</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>HTTP/2</title>
    <link href="https://blog.stark-x.cn/Basic/http-2-0.html"/>
    <id>https://blog.stark-x.cn/Basic/http-2-0.html</id>
    <published>2020-07-03T10:00:58.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- Description to show on index here  --><p>HTTP/2（曾用名：HTTP/2.0<sup class="footnote-ref"><a href="#fn1" id="fnref1">[1]</a></sup>），改进的目标是使得应用更快，更简单，更稳定，它把以前针对 HTTP/1.1 作出的优化方案内置于[[TCP 协议#传输层]]中，使得进行更多的优化成为可能。</p><p>HTTP/2 的主要改进方向是通过支持请求、响应复用以减少延迟。为了减少协议开销，引入了“二进制分帧层”，增加了对请求的优先级和服务器推送的支持。</p><p>HTTP/2 没有对 HTTP/1.1 的概念进行改动，它改动的是数据格式化（分帧）以及客户端与服务端传输的方式。通过这两项改动，现有的应用不需要做修改，就可以在新的协议下运行。</p><p>为什么不叫 HTTP1.2 ？因为HTTP/2 引入的“二进制分帧层”与以前的 HTTP 传输的内容的实现不兼容，所以更改了主版本号。</p><span id="more"></span><h2 id="SPDY-与-HTTP-2">SPDY 与 HTTP/2</h2><p>SPDY 是 2009 年，由 Google 开发的一个实验性协议，目标是不更改现有应用的情况下，减少 HTTP/1.1 的加载延迟。2012 年，该协议开始被主流的浏览器支持，越来越多的使用使得它具备成为标准的条件。因此，HTTP 工作组在吸取 SPDY 的优点之后，以 SPDY 为基础设立了新的 HTTP 协议，也就是 HTTP/2。</p><p>在之后的三年，SPDY 作为 HTTP/2 的实验分支，并行开发，直至 2015 年初，IESG 批准发布 HTTP/2，Google 决定于 2016 年初停止对 SPDY 的支持。</p><h2 id="HTTP-2-的设计">HTTP/2 的设计</h2><p>HTTP/1.x 很简单，但是由于它的简单，在应用性能方面就会有一些牺牲，例如以下的一些缺陷，</p><ul><li>客户端需要建立多个连接实现并发</li><li>请求头、响应头是纯文本的，且没进行压缩</li><li>不支持请求优先级</li><li>…</li></ul><p>为了解决这些问题的同时，不影响现有的应用，HTTP/2 没有对 HTTP 的核心概念进行变更，所以，HTTP/2 仍然是 HTTP 的拓展，而不是替代。</p><h3 id="二进制分帧层">二进制分帧层</h3><p>以下的图简单的说明了 HTTP 消息的变化</p><p><img src="http://img-cdn.xjztest.com/binary_frame.png.png" alt="binary_frame"></p><p>“层”指的是给套接字与应用使用的，经过优化的新编码机制。这种新的编码方式在不改变原来的 HTTP 语义的前提下，把原来 HTTP/1.x 使用的纯文本分割成多个二进制帧，因此，只使用 HTTP/1.x 的客户端/服务端无法与只使用 HTTP/2 的客户端/服务端通讯。</p><p>二进制分帧层的实现是 HTTP/2 所有其它功能和性能优化的基础。</p><h3 id="数据流、消息、帧">数据流、消息、帧</h3><p>新的机制带来了三个新的概念：</p><ul><li><em>数据流 / 流 （stream）</em>：双向字节流，可以承载多条消息</li><li><em>消息</em>：与请求/响应对应的完整的一些列的<em>帧</em></li><li><em>帧</em>：HTTP/2 的最小通信单位，至少包含<em>帧头（Headers Frame）</em></li></ul><p>相互的关系：</p><ul><li>只需要一个 TCP 连接，此连接可以承载任意数量的<em>数据流</em></li><li><em>数据流</em>用于承载双向<em>信息</em>，每个<em>数据流</em>都包含一个唯一的标识符以及可选的优先级信息</li><li>每一条<em>消息</em>都是一条逻辑 HTTP 请求（如请求/响应），包含一个或者多个帧</li><li>来自不同的<em>帧</em>可以交错发送，然后根据每个<em>帧头</em>的标识符重新组装（与[[TCP 数据包]]类似）</li></ul><p><img src="http://img-cdn.xjztest.com/http2_frame_stream_message.png.png" alt="http2_frame_stream_message"></p><h4 id="帧的结构">帧的结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">╔═════════════════════════╦════════════╗</span><br><span class="line">║ Length (24)             ║   Type (8) ║</span><br><span class="line">╠═══════════╦═════════════╩════════════╣</span><br><span class="line">║ Flags (8) ║                          ║</span><br><span class="line">╠═══════╦═══╩══════════════════════════╣</span><br><span class="line">║ R (1) ║       Stream Identifier (31) ║</span><br><span class="line">╠═══════╩══════════════════════════════╣</span><br><span class="line">║ Frame payload (N)                    ║</span><br><span class="line">╚══════════════════════════════════════╝</span><br></pre></td></tr></table></figure><ul><li>Length，3 字节，表示帧 payload 的长度。（范围2^ 14~2^24-1 字节）默认帧大小为 2^14 字节，可在 <code>SETTINGS</code> 帧中设置。</li><li>Type，1 字节，帧类型</li><li>Flags，1 字节，帧的相关配置</li><li>R，1 位，保留位</li><li>Stream Identifier，31 位， <em>数据流</em>的唯一 ID</li><li>Frame Payload，长度由 Length 定义</li></ul><p>相对于 HTTP/1.x，HTTP/2 在一开始就知道分配多少的内存，只需要提前分配好内存即可。而前者，需要不断地读取请求流，根据内容开辟新的内存（不连续的内存带来的性能影响可以谷歌一下），而且前者在处理完一个请求流之前，不能停止解析。</p><h3 id="请求-响应-复用">请求/响应 复用</h3><p>在 HTTP/1.x 中，客户端需要发起多个并行的连接的时候，会有多个 TCP 连接被建立。这是 HTTP/1.x 的模型，每个 TCP 连接只处理一个请求+响应，而这种模型会导致<strong>队首阻塞（Head-of-line-blocking, AKA. HOL）</strong> 问题。<sup class="footnote-ref"><a href="#fn2" id="fnref2">[2]</a></sup></p><p><em>二进制分帧层</em>解决了这个问题：客户端与服务端之间的 HTTP 消息被拆分成多个互不依赖的<em>帧</em>，交错发送，在另一端重新按序列顺序组装起来。</p><p><img src="http://img-cdn.xjztest.com/http2_connecting.png.png" alt="http2_connecting"></p><p>在这种模式下， 一个 TCP 连接就能同时传输多个 HTTP请求/响应，这个加强带来了巨大的性能提升。</p><p><img src="http://img-cdn.xjztest.com/http2_multiplexing.png.png" alt="http2_multiplexing"></p><p>从左到右，效率越来越高。</p><ol><li>一个请求紧接一个响应，较为低效。</li><li>在 HTTP/1.1，应用了 Pipeling 技术，请求一次性全部发送，客户端等待响应。</li><li>Pipelineing 技术还是有个问题，如果第一个请求的处理有问题，后续的请求即使处理完了，还是需要等待第一个请求处理完成，即 HOL Blocking。</li><li>HTTP/2 提出的<em>多路复用</em>技术，解决了这个问题。</li></ol><p>使用这种多路复用技术带来了以下的特性使得我们的应用速度更快，开发更简单，部署成本更低。</p><ul><li>并行交错地发送/接收请求/响应，互不影响</li><li>只使用一个 TCP 连接处理多个请求/响应，减轻了服务器/客户端的负担</li><li>免除了很多针对 HTTP/1.x 所做的优化</li><li>免除不必要的延迟、等待，从而减少了页面加载时间</li><li>等等···</li></ul><h3 id="数据流优先级">数据流优先级</h3><p>HTTP/2 赋予了每个<em>数据流</em>一个介于 1~256 整数的优先级，以及显式的依赖关系。</p><p>通过这两项构建的”优先级树“被用于系统决定资源的分配（CPU、内存等）。</p><p><img src="http://img-cdn.xjztest.com/http2_priority_tree.png.png" alt="http2_priority_tree"></p><p>以上图为例，每个节点代表一个<em>数据流</em>，<em>数据流</em>处理的优先级依照”先处理和传输响应 D，然后再处理和传输响应 C“。在资源分配方面，则是根据权重占比分配，如：针对从左到右的第一张图，A 获得的资源为 <code>12/(12+4)</code>，B 获得的资源为 <code>4/(12+4)</code>。</p><p>同样是以上图为例，从左到右依次为：</p><ol><li>A、B 没有指定父依赖，那它们会依赖于一个隐式的”根数据流“</li><li>C 依赖于 D，D 依赖于根数据流，所以，D 会有更高的优先级获取到完整的资源分配</li><li>优先级 D &gt; C &gt; A / B，A 获得的资源为 <code>12/(12+4)</code>，B 获得的资源为 <code>4/(12+4)</code>。</li><li>优先级 D &gt; C / E &gt; A / B，···</li></ol><p>通过上述的权重及依赖关系，我们可以明确地表达资源的优先级，另外，HTTP/2 还允许客户端随时更新这些优先级，更进一步地优化客户端的性能。</p><p>需要注意的是，优先级不是要求，不能被用于强制处理顺序或者传输顺序，因为，我们不希望优先级较高的资源受到阻止的时候，还阻止低优先级的资源的处理。</p><h3 id="一个源（Origin）一个连接">一个源（Origin）一个连接</h3><p>在有了新的<em>二进制分帧层</em>机制后，HTTP/2 不再依赖多个 TCP 连接去并行复用<em>数据流</em>，因此，所有 HTTP/2 的连接都是持久的，而且每个源只需一个 TCP 连接。</p><p>HTTP 的请求大都是短暂的，而 TCP 协议却是针对长时间的批量数据做了优化，在使用 HTTP/2 之后，可以很好地化解这个矛盾，更少的连接可以减少使用的资源，在同等的配置下，使用了 HTTP/2 的服务器能有效的减少网络延迟，提高通量（连接吞吐量），从而降低成本。<sup class="footnote-ref"><a href="#fn3" id="fnref3">[3]</a></sup></p><h3 id="流控制">流控制</h3><p>因为 HTTP 1.X 一个连接只使用一个 TCP 连接，直接使用 TCP 的 <code>流控制</code> <sup class="footnote-ref"><a href="#fn4" id="fnref4">[4]</a></sup>无法精准地控制，也无法提供相应的 API 对单个 TCP 内的数据流进行调节。为了解决这个问题，HTTP/2 提供了一系列的概念，从而使得客户端和服务端有能力实现自己的<em>数据流</em>级别的和<em>连接</em>级别的 <code>流控制</code>：</p><ul><li><code>流控制</code>是<strong>定向的</strong>。每个连接接收方都可以根据自身需要选择为每个数据流或者整个连接设置任意的窗口大小。</li><li><code>流控制</code> <strong>基于信用</strong>。每个接收方都可以公布其初始连接和数据流流控制窗口（以字节为单位），每当发送方发出 <code>DATA</code> 帧时都会减小，在接收方发出 <code>WINDOW_UPDATE</code> 帧时增大。</li><li><code>流控制</code> <strong>无法停用</strong>。建立 HTTP/2 连接后，客户端将与服务器交换 <code>SETTINGS</code> 帧，这会在两个方向上设置流控制窗口。 流控制窗口的默认值设为 65535 字节，但是接收方可以设置一个较大的最大窗口大小（2^31-1 字节），并在接收到任意数据时通过发送 <code>WINDOW_UPDATE</code> 帧来维持这一大小。</li><li><code>流控制</code>是<strong>逐跃点控制</strong>，而非端到端控制。即，可信中介/代理可以使用它来控制资源使用，以及基于自身条件和启发式算法实现资源分配机制。</li></ul><p>HTTP/2 未指定任何特定算法来实现流控制，但是，它提供了简单的相关概念，推迟了客户端和服务端对此的实现，通过实现自定义的策略，服务端、客户端可以实现更好的传输规则，以提高体验。如：通过让浏览器获取低分辨率的缩略图之后，把<em>控制窗口</em>减少为零，等其它关键项加载完毕之后，再重新恢复<em>控制窗口</em>。</p><h3 id="服务器推送">服务器推送</h3><p>HTTP/2 还新增了一个功能，服务端可以对客户端的一个请求发送多个响应。</p><p><img src="http://img-cdn.xjztest.com/http2_server_push.png.png" alt="http2_server_push"></p><p>一个典型的 Web App 会包含多种资源，客户端需要获得完整的文档（如：index.html）之后，才知道需要什么其它的内容。那么如果可以在第一次请求服务端时，就把其它资源都一并发送回客户端，这额外的延迟等待就可以被省去了。</p><p>除了提前推送需要用到的资源这个特性之外，<em>服务器推送</em>还有以下的特性：</p><ul><li>推送的资源由客户端缓存</li><li>推送的资源可以在不同的页面之间重用</li><li>与其它资源的请求组成<em>响应复用</em></li><li>由服务端设定优先级</li><li>可以被客户端拒绝</li></ul><h4 id="PUSH-PROMISE-101"><code>PUSH_PROMISE</code> 101</h4><p>如果服务端决定推送一个对象，则一个<code>PUSH_PROMISE</code> 帧会被构建，并比<code>DATA</code>帧更早一步发送到客户端。在客户端收到 <code>PUSH_PROMISE</code> 帧后，它可以根据情况通过发送<code>RST_STREAM</code>帧选择拒绝数据流。（如：资源已经在本地缓存）</p><p>一个<code>PUSH_PROMISE</code> 帧有以下属性：</p><ul><li>包含所需要推送的资源的 HTTP Headers</li><li>被发送的对象必须确保是可被缓存的</li><li><code>PUSH_PROMISE</code> 帧使用对应的请求的流的 ID 构造响应的 <code>PUSH_PROMISE</code> 帧</li><li><code>PUSH_PROMISE</code> 帧会声明接下来发送的响应（推送的资源）所使用的的流的 ID （都为偶数）<sup class="footnote-ref"><a href="#fn5" id="fnref5">[5]</a></sup></li><li>方法必须是幂等的，即请求不能为 POST 这种，可能改变服务端资源状态的方法</li></ul><h3 id="标头（Header）压缩">标头（Header）压缩</h3><p>每个 HTTP 请求都有一组标头，指明了传输的资源及其属性，在 HTTP/1.x 中，标头都是纯文本，以回车换行符（<code>CRLF</code>）分割，这些元数据通常会给使得实际传输的数据增加 500-800 字节，如果包含了 cookies，则有时候会增加上千字节。</p><p>为了减少这个开销，HTTP/2 使用了 <code>HPACK</code> <sup class="footnote-ref"><a href="#fn6" id="fnref6">[6]</a></sup>压缩格式对请求 / 响应的标头进行压缩，这种压缩格式采用了两种简单但是强大的技术手段：</p><ol><li>通过静态[[霍夫曼编码（huffman coding）]]对标头进行编码，从而减少了数据量</li><li>通过要求客户端、服务端同时维护一个包含了之前使用过的标头字段的索引列表，减少了冗余的标头字段传输</li></ol><p><img src="http://img-cdn.xjztest.com/http2_headers_hpack.png.png" alt="http2_headers_hpack"></p><p>如上图，在一个新的<em>数据流</em>中，只需要传输 <code>path</code> 字段的内容，减少了大约六分之五的数据量。</p><p>为了做进一步的优化，HPACK 压缩包含一个静态表以及一个动态表</p><ul><li>静态表包含了常用的标头</li><li>动态表初始为空，将根据情况在采用了静态的[[霍夫曼编码（huffman coding）]]之后对列表进行更新。</li></ul><p>注意，在 HTTP/2 的标头中，字段的含义不变，但会有些许差异</p><ul><li>所有的标头字段名都为小写</li><li>请求行从<code>Method Request-URI HTTP-Version</code>拆分成 <code>:method</code>, <code>:scheme</code>, <code>:authority</code>, <code>:path</code></li></ul><h3 id="确认服务器支持-HTTP-2">确认服务器支持 HTTP/2</h3><h4 id="协议发现">协议发现</h4><ol><li>非加密通讯时，使用 <code>Upgrade</code> 请求显示表明期望使用 HTTP/2，如果服务器支持，会返回 <code>101 Switching Protocols</code></li><li>如果是 TLS 加密的通讯，客户端在 [[TCP 三次握手，四次挥手（TCP Handshake）#ClientHello]] 消息中设置 ALPN（Application-Layer Protocol Negotiation，应用层协议协商）来显示表明期望使用 HTTP/2</li></ol><h4 id="Double-Confirm">Double Confirm</h4><p>客户端会发送一个特殊字节流 <code>Connection Preface</code> 作为第一个数据。<code>Connection Preface</code> 是一个纯文本的数据：<code>0x505249202a20485454502f322e300d0a0d0a534d0d0a0d0a </code>，解析为 [[ASCII 编码]]：<code>PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n</code>。这是 HTTP/1.x 的格式，PRI 是请求方法，如果不支持 HTTP/2，则服务端会返回方法错误；而支持 HTTP/2 的服务端会返回一个<code>SETTING</code>帧来回应紧接着 <code>Connection Preface</code> 的来自于客户端的<code>SETTING</code>帧，以表明自己支持 HTTP/2，这样客户端就知道服务端支不支持 HTTP/2 了。</p><h2 id="参考资料">参考资料</h2><ul><li>Google - HTTP/2 简介： <a href="https://developers.google.com/web/fundamentals/performance/http2?hl=zh-cn">https://developers.google.com/web/fundamentals/performance/http2?hl=zh-cn</a></li><li><a href="https://juejin.im/post/5da16e9ef265da5b76373d0e">https://juejin.im/post/5da16e9ef265da5b76373d0e</a></li></ul><hr class="footnotes-sep"><section class="footnotes"><ol class="footnotes-list"><li id="fn1" class="footnote-item"><p><em>HTTP/2.0</em>：根据 <a href="https://en.wikipedia.org/wiki/HTTP/2#Development_milestones">wikipedia</a> 的记录，HTTP/2 在 2012 年初，曾用 HTTP/2.0 作为名字，在 2015 年 1 月之后，正式命名为 HTTP/2。 <a href="#fnref1" class="footnote-backref">↩︎</a></p></li><li id="fn2" class="footnote-item"><p>一个要求按顺序传送数据的队列的第一个数据包（队头）受阻而导致后续的所有数据包受阻。一种解决办法是，使用虚拟的输出队列。 <a href="#fnref2" class="footnote-backref">↩︎</a></p></li><li id="fn3" class="footnote-item"><p>维持连接需要资源，更少的连接，代表了更少的内存占用；网络拥塞情况减轻，[[慢启动（slow start）]] 时间减少，拥塞和丢包恢复速度加快；避免了频繁的 [[TCP 三次握手，四次挥手（TCP Handshake）]]。 <a href="#fnref3" class="footnote-backref">↩︎</a></p></li><li id="fn4" class="footnote-item"><p><code>流控制</code> 是一种阻止发送方向接收方发送大量数据的机制，以免超出后者的需求或处理能力：发送方可能非常繁忙、处于较高的负载之下，也可能仅仅希望为特定数据流分配固定量的资源。 例如，客户端可能请求了一个具有较高优先级的大型视频流，但是用户已经暂停视频，客户端现在希望暂停或限制从服务器的传输，以免提取和缓冲不必要的数据。更多内容，请参阅 [[流控制（Flow Control）]] <a href="#fnref4" class="footnote-backref">↩︎</a></p></li><li id="fn5" class="footnote-item"><p>客户端的流从 1 开始，之后每个新的流都使用加 2 之后的 ID，即都是奇数。而服务端主动推送的流的 ID 从 2 开始，之后每个新的推送的流都使用加 2 之后的 ID，即都是偶数。这样的处理可以让双方判断哪些流是由服务端推送的。0 是保留的流 ID，用于连接级的控制消息。 <a href="#fnref5" class="footnote-backref">↩︎</a></p></li><li id="fn6" class="footnote-item"><p>HPACK 是种表查找压缩方案，它利用霍夫曼编码获得接近 <code>GZIP</code> 的压缩率。 <a href="#fnref6" class="footnote-backref">↩︎</a></p></li></ol></section>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;p&gt;HTTP/2（曾用名：HTTP/2.0&lt;sup class=&quot;footnote-ref&quot;&gt;&lt;a href=&quot;#fn1&quot; id=&quot;fnref1&quot;&gt;[1]&lt;/a&gt;&lt;/sup&gt;），改进的目标是使得应用更快，更简单，更稳定，它把以前针对 HTTP/1.1 作出的优化方案内置于[[TCP 协议#传输层]]中，使得进行更多的优化成为可能。&lt;/p&gt;
&lt;p&gt;HTTP/2 的主要改进方向是通过支持请求、响应复用以减少延迟。为了减少协议开销，引入了“二进制分帧层”，增加了对请求的优先级和服务器推送的支持。&lt;/p&gt;
&lt;p&gt;HTTP/2 没有对 HTTP/1.1 的概念进行改动，它改动的是数据格式化（分帧）以及客户端与服务端传输的方式。通过这两项改动，现有的应用不需要做修改，就可以在新的协议下运行。&lt;/p&gt;
&lt;p&gt;为什么不叫 HTTP1.2 ？因为HTTP/2 引入的“二进制分帧层”与以前的 HTTP 传输的内容的实现不兼容，所以更改了主版本号。&lt;/p&gt;</summary>
    
    
    
    <category term="Basic" scheme="https://blog.stark-x.cn/categories/Basic/"/>
    
    
    <category term="network" scheme="https://blog.stark-x.cn/tags/network/"/>
    
    <category term="http" scheme="https://blog.stark-x.cn/tags/http/"/>
    
  </entry>
  
  <entry>
    <title>使用 Mockito mock 类的一部分 [译]</title>
    <link href="https://blog.stark-x.cn/Develop/Using-Mockito-to-partially-mock-a-class.html"/>
    <id>https://blog.stark-x.cn/Develop/Using-Mockito-to-partially-mock-a-class.html</id>
    <published>2020-03-10T00:49:08.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<!-- Description to show on index here  --><p>原文：<a href="https://medium.com/@sudarshan_sreenivasan/using-mockito-to-partially-mock-a-class-bf0be6c33dcc">Using Mockito to partially mock a class</a>作者：<a href="https://medium.com/@sudarshan_sreenivasan">Sudarshan</a></p><p>有时候，我们需要 mock 一个类的其中一些方法，其它的方法保持 un-mocked。</p><p>接下来，我会告诉你如何使用 Mockito 的 <code>mock</code> 或者 <code>spy</code> 去完成这件事。</p><span id="more"></span><p>假设我们有下面这个名为 <em>Stock</em> 的类</p><figure class="highlight java"><figcaption><span>Stock.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Stock</span> &#123;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">double</span> price;</span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> <span class="type">int</span> quantity;</span><br><span class="line"></span><br><span class="line">  Stock(<span class="type">double</span> price, <span class="type">int</span> quantity) &#123;</span><br><span class="line">    <span class="built_in">this</span>.price = price;</span><br><span class="line">    <span class="built_in">this</span>.quantity = quantity;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getPrice</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> price;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">getQuantity</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> quantity;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">public</span> <span class="type">double</span> <span class="title function_">getValue</span><span class="params">()</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> getPrice() * getQuantity();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果你想 mock 大多数的方法，而其中一小部分还是提供真正的实现，我们可以使用<code>mock</code>方法。</p><figure class="highlight java"><figcaption><span>UseMock.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Stock</span> <span class="variable">stock</span> <span class="operator">=</span> mock(Stock.class);</span><br><span class="line">when(stock.getPrice()).thenReturn(<span class="number">100.00</span>);    <span class="comment">// Mock implementation</span></span><br><span class="line">when(stock.getQuantity()).thenReturn(<span class="number">200</span>);    <span class="comment">// Mock implementation</span></span><br><span class="line">when(stock.getValue()).thenCallRealMethod();  <span class="comment">// Real implementation</span></span><br></pre></td></tr></table></figure><p>反过来，如果你想保持大多数的方法使用真正的实现，只 mock 其中一小部分的方法，我们可以使用<code>spy</code>方法。</p><figure class="highlight java"><figcaption><span>UseSpy.java</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">Stock</span> <span class="variable">stock</span> <span class="operator">=</span> spy(Stock.class);</span><br><span class="line">doReturn(<span class="number">100.00</span>).when(stock).getPrice();    <span class="comment">// Mock implementation</span></span><br><span class="line">doReturn(<span class="number">200</span>).when(stock).getQuantity();    <span class="comment">// Mock implementation</span></span><br><span class="line"><span class="comment">// All other method call will use the real implementations</span></span><br></pre></td></tr></table></figure><h2 id="总结">总结</h2><p><strong>Mockito::mock</strong> 一般用于对调用打桩，也就是对各种方法覆盖返回特定的值，跟其它的“mock”库非常类似。</p><p><strong>Mockito::spy</strong>，只 mock 一个对象的部分方法，其余部分保持不变，调用时使用原有的实现。</p>]]></content>
    
    
    <summary type="html">&lt;!-- Description to show on index here  --&gt;
&lt;p&gt;原文：&lt;a href=&quot;https://medium.com/@sudarshan_sreenivasan/using-mockito-to-partially-mock-a-class-bf0be6c33dcc&quot;&gt;Using Mockito to partially mock a class&lt;/a&gt;
作者：&lt;a href=&quot;https://medium.com/@sudarshan_sreenivasan&quot;&gt;Sudarshan&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;有时候，我们需要 mock 一个类的其中一些方法，其它的方法保持 un-mocked。&lt;/p&gt;
&lt;p&gt;接下来，我会告诉你如何使用 Mockito 的 &lt;code&gt;mock&lt;/code&gt; 或者 &lt;code&gt;spy&lt;/code&gt; 去完成这件事。&lt;/p&gt;</summary>
    
    
    
    <category term="Develop" scheme="https://blog.stark-x.cn/categories/Develop/"/>
    
    
    <category term="翻译" scheme="https://blog.stark-x.cn/tags/%E7%BF%BB%E8%AF%91/"/>
    
    <category term="java" scheme="https://blog.stark-x.cn/tags/java/"/>
    
    <category term="mock" scheme="https://blog.stark-x.cn/tags/mock/"/>
    
  </entry>
  
  <entry>
    <title>shell - value too great for base (error token is &quot;08&quot;)</title>
    <link href="https://blog.stark-x.cn/troubleshoot/shell-value-too-great-for-base-error-token-is-08.html"/>
    <id>https://blog.stark-x.cn/troubleshoot/shell-value-too-great-for-base-error-token-is-08.html</id>
    <published>2020-03-06T15:39:54.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- Description to show on index here  --><p>在 shell 脚本编写时，有时候需要进行数学运算（例子🌰：<code>$((1 + 1))</code>），特殊情况下，输入的数字是带着 0 前序的，当对这个带着 0 前序的数字进行数学运算时，计算结果会与预想中的不一致，或者直接报错，错误信息如<code>value too great for base (error token is &quot;02&quot;)</code></p><p>那是因为 bash 执行 shell script 时，0 前缀的数字被认为是 8 进制的数字，经过测试，zsh 里不会报错，数字“09”还是被认为是十进制的“9”。</p><span id="more"></span><h2 id="例子-🌰">例子 🌰</h2><p>有如下 crontab 定时任务，在每隔一个周日的凌晨 3 点钟执行脚本 /backup/backup.sh，编写的 crontab 内容如下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># crontab</span></span><br><span class="line">0 3 * * 7 [ $(($(date +%U) % <span class="number">2</span>)) -eq 0 ] &amp;&amp; sh /bakcup/backup.sh</span><br></pre></td></tr></table></figure><p><code>[ $(($(date +%U) % 2)) -eq 0 ]</code> 表示获取当前的周序号（以周日作为第一天的周），把结果模 2，余数是否等于 0，以此判定是否为偶数周，如果是，则执行“&amp;&amp;”后面的命令。</p><p>如果把 zsh 作为 shell，在测试这一条命令时，或者刚好当前的周是双位数，则不会报错，也就不会发现这个问题，直到最多长达 40+ 周之后，才会在第二年的开头发现定时任务无法正常执行。</p><h2 id="解决办法">解决办法</h2><p>在数字前面加上 <code>10#</code>，显式地把该数字标记为十进制，上述的 crontab 改为如下版本即可。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 * * 7 [ $((<span class="number">10</span>#$(date +%U) % <span class="number">2</span>)) -eq 0 ] &amp;&amp; sh /bakcup/backup.sh</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;p&gt;在 shell 脚本编写时，有时候需要进行数学运算（例子🌰：&lt;code&gt;$((1 + 1))&lt;/code&gt;），特殊情况下，输入的数字是带着 0 前序的，当对这个带着 0 前序的数字进行数学运算时，计算结果会与预想中的不一致，或者直接报错，错误信息如&lt;code&gt;value too great for base (error token is &amp;quot;02&amp;quot;)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;那是因为 bash 执行 shell script 时，0 前缀的数字被认为是 8 进制的数字，经过测试，zsh 里不会报错，数字“09”还是被认为是十进制的“9”。&lt;/p&gt;</summary>
    
    
    
    <category term="troubleshoot" scheme="https://blog.stark-x.cn/categories/troubleshoot/"/>
    
    
    <category term="shell" scheme="https://blog.stark-x.cn/tags/shell/"/>
    
    <category term="疑难杂症" scheme="https://blog.stark-x.cn/tags/%E7%96%91%E9%9A%BE%E6%9D%82%E7%97%87/"/>
    
  </entry>
  
  <entry>
    <title>使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群 - TL;DR</title>
    <link href="https://blog.stark-x.cn/Solutions/local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox-tldr.html"/>
    <id>https://blog.stark-x.cn/Solutions/local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox-tldr.html</id>
    <published>2019-03-04T15:25:14.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- Description to show on index here  --><p>本文章是上一篇文章「<a href="/Solutions/Local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox.html" title="使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群">使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群</a>」的 TL;DR 版本。</p><h1>目标</h1><ul><li>启动两个虚拟机，一个作为主节点，一个作为工作节点</li><li>熟悉 Kubeadm</li><li>在集群上部署Kubernetes-dashboard、nginx</li></ul><span id="more"></span><h1>环境相关</h1><ul><li>操作系统：macOS Mojave 10.14.3 (18D109)</li><li>编排工具：Vagrant 2.2.3</li><li>虚拟机：Virtualbox 6.0</li><li>可变参数：注意所有替换文中所有的${xxx}为自己环境的值</li></ul><h1>实验环境设计</h1><p>使用 Vagrant 配合 Virtualbox 建立两个节点模拟集群，一个作为 master node，一个作为 work node。</p><h2 id="要求">要求</h2><ul><li>master:<ul><li>network:<ul><li>8001:8001/tcp</li><li>80:10000/tcp</li></ul></li></ul></li><li>worker:<ul><li>network:<ul><li>80:10001/tcp</li></ul></li></ul></li><li>master &amp; worker:<ul><li>OS: Ubuntu/xenial64</li><li>CPU: 2 core</li><li>MEM: 2 GB</li><li>network:<ul><li>iface x 2: NAT &amp; Host-Only</li></ul></li><li>dependencies:<ul><li>kubelet</li><li>kubectl</li><li>kubeadm</li><li>docker</li></ul></li></ul></li></ul><h2 id="Vagrantfile">Vagrantfile</h2><figure class="highlight ruby"><figcaption><span>Vagrantfile</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$script</span> = <span class="string">&lt;&lt;-SCRIPT</span></span><br><span class="line"><span class="string">echo &quot;Update and install the kubeadm&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">apt-get update &amp;&amp; apt-get install -y apt-transport-https curl</span></span><br><span class="line"><span class="string">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://apt.kubernetes.io/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">apt-get update</span></span><br><span class="line"><span class="string">apt-get install -y kubelet kubeadm kubectl docker.io</span></span><br><span class="line"><span class="string">apt-mark hold kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">usermod -aG docker vagrant</span></span><br><span class="line"><span class="string">kubeadm config images pull</span></span><br><span class="line"><span class="string">SCRIPT</span></span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">  config.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">v</span>|</span><br><span class="line">    v.memory = <span class="number">2048</span></span><br><span class="line">    v.cpus = <span class="number">2</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  config.vm.define <span class="string">&quot;master&quot;</span>, <span class="symbol">primary:</span> <span class="literal">true</span> <span class="keyword">do</span> |<span class="params">master</span>|</span><br><span class="line">    master.vm.hostname = <span class="string">&quot;k8s-cluster-master&quot;</span></span><br><span class="line">    master.vm.box = <span class="string">&quot;ubuntu/xenial64&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="symbol">guest:</span> <span class="number">80</span>, <span class="symbol">host:</span> <span class="number">10000</span>, <span class="symbol">protocol:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="symbol">guest:</span> <span class="number">8001</span>, <span class="symbol">host:</span> <span class="number">8001</span>, <span class="symbol">protocol:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">type:</span> <span class="string">&quot;dhcp&quot;</span></span><br><span class="line">    master.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="variable">$script</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">&quot;node&quot;</span> <span class="keyword">do</span> |<span class="params">node</span>|</span><br><span class="line">    node.vm.hostname = <span class="string">&quot;k8s-cluster-node&quot;</span></span><br><span class="line">    node.vm.box = <span class="string">&quot;ubuntu/xenial64&quot;</span></span><br><span class="line">    node.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="symbol">guest:</span> <span class="number">80</span>, <span class="symbol">host:</span> <span class="number">10001</span>, <span class="symbol">protocol:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    node.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">type:</span> <span class="string">&quot;dhcp&quot;</span></span><br><span class="line">    node.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="variable">$script</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="启动节点-2">启动节点</h2><p>执行命令<code>vagrant up</code>，Vagrant 开始自动下载Ubuntu镜像，顺利启动后，vagrant 会执行我们写在<code>Vagrantfile</code>里的 Shell 脚本。初始化完成后，在当前窗口执行<code>vagrant ssh master</code>，新开一个窗口执行<code>vagrant ssh node</code>分别 ssh 进入到主节点以及工作节点。<img src="http://img-cdn.xjztest.com/20190305142616-vagrant_up.png.png" alt="vagrant up"><em><small>第一次执行<code>vagrant up</code>会看到更多的信息。</small></em></p><p>使用命令<code>ip a</code>查看当前节点 ip，两个节点互相 ping，检查连通性。</p><h1>部署 Kubernetes 集群</h1><p>根据上述 Vagrantfile 创建出来的虚拟机各有两个网卡，第一个是 NAT 模式，第二个是 Host-Only 模式，而 Kubernetes nodes 节点间通讯应该通过第二个网卡，所以选择了 <em>flannel</em> 作为 <a href="https://kubernetes.io/docs/concepts/cluster-administration/addons/">CNI 插件</a>，因为它可以指定用于节点间通讯的网卡 (iface)(<a href="https://github.com/coreos/flannel/blob/master/Documentation/troubleshooting.md#vagrant">原因</a>)。</p><p>参考<a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/">官方文档</a>，步骤如下：</p><ol><li>获取 <em>flannel</em> 的 yaml 文件，修改系统参数，并修改 iface 使用第二个网卡。</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo sysctl net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">wget https://github.com/coreos/flannel/blob/master/Documentation/kube-flannel.yml</span><br><span class="line"><span class="comment"># 找到image tag是-amd64结尾的/opt/bin/flanneld，在下面的args列表添加 - --iface 以及 - enp0s8 这两行</span></span><br><span class="line"><span class="comment"># vim kube-flannel.md</span></span><br></pre></td></tr></table></figure><ol start="2"><li>在主节点 <em>k8s-cluster-master</em> 执行<code>sudo kubeadm init --apiserver-advertise-address=$&#123;ip&#125; --pod-network-cidr=10.244.0.0/16</code>初始化节点，成功后，根据 kubeadm 的输出，执行接下来的命令。</li><li>复制 kubeadm 生成的配置文件，更改配置文件夹的权限</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo <span class="built_in">chown</span> $(<span class="built_in">id</span> -u):$(<span class="built_in">id</span> -g) <span class="variable">$HOME</span>/.kube/config</span><br></pre></td></tr></table></figure><ol start="4"><li>启动 CNI 插件 <em>flannel</em></li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><ol start="5"><li>把下面 shell 脚本保存为 “<a href="http://change-kubelet-node-ip.sh">change-kubelet-node-ip.sh</a>”，并执行</li></ol>  <figure class="highlight bash"><figcaption><span>change-kubelet-node-ip.sh</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">COND_NODE_IP=`grep node-ip /var/lib/kubelet/kubeadm-flags.env | <span class="built_in">wc</span> -l`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;COND_NODE_IP&#125;</span> = 1 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;--node-ip had been set, skipped&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sudo sed -i <span class="string">&#x27;/^.*/ s/$/ --node-ip=$&#123;ip&#125;/&#x27;</span> /var/lib/kubelet/kubeadm-flags.env</span><br><span class="line">sudo systemctl restart kubelet</span><br></pre></td></tr></table></figure><ol start="6"><li>在 worker节点执行如下脚本，把 worker 节点加入到 Kubernetes 集群</li></ol>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm <span class="built_in">join</span> <span class="variable">$&#123;master_ip&#125;</span>:6443 --token <span class="variable">$&#123;token&#125;</span> --discovery-token-ca-cert-hash sha256:<span class="variable">$&#123;hash&#125;</span> --apiserver-advertise-address=<span class="variable">$&#123;worker_ip&#125;</span></span><br></pre></td></tr></table></figure><ol start="7"><li>在 worker 节点同样运行上述的 “<a href="http://change-kubelet-node-ip.sh">change-kubelet-node-ip.sh</a>”，注意修改脚本里的 ip地址为 worker 节点的 ip。</li><li>查看节点状态，Pods 状态</li></ol><p><img src="http://img-cdn.xjztest.com/20190305154528-get_pods_nodes-master.png.png" alt="Node: master | get pods, get nodes"><center><small>Node: master | get pods, get nodes</small></center></p><p><img src="http://img-cdn.xjztest.com/20190305154700-kubeadm_join-worker.png.png" alt="Node: worker | kubeadm join"><center><small>Node: worker | kubeadm join</small></center></p><h1>部署 Kubernetes Dashboard</h1><ol><li>从<a href="https://github.com/kubernetes/dashboard">Kubernetes Dashboard Repo</a>获取部署命令，部署 dashboard。</li><li>查看 pods 状态，直到相关 pods 处于 running 状态。</li><li>启动 Kubenetes Proxy。</li><li>通过 proxy 访问 Dashboard: <a href="http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a> 。(Kubernetes Proxy 是一个反向代理，把外部请求通过主节点/集群，转发到工作节点/集群，避免直接暴露服务，降低安全风险)</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br><span class="line">kubectl get pods -n kube-system</span><br><span class="line">kubectl proxy --address 0.0.0.0</span><br></pre></td></tr></table></figure><p><img src="http://img-cdn.xjztest.com/20190305160256-kubernetes_dashboard-master.png.png" alt="Node: master | Kubernetes dashboard"><center><small>Node: master | Kubernetes dashboard</small></center></p><p><img src="http://img-cdn.xjztest.com/20190305160831-Kubernetes_dashboard-access.png.png" alt="Kubernetes Dashboard Login"> <center><small>Kubernetes Dashboard Login</small></center></p><h1>部署 Nginx</h1><p>编写一个 yaml 文件，部署两个 NGINX instance 到集群。</p><h2 id="nginx-rs-yaml">nginx-rs.yaml</h2><p>保存下面的yaml，命名为 “nginx-rs.yaml”。</p><figure class="highlight yaml"><figcaption><span>nginx-rs.yaml</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">            <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h2 id="部署-2">部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># vi nginx-rs.yaml</span></span><br><span class="line">kubectl apply -f nginx-rs.yaml</span><br><span class="line">kubectl get pods</span><br><span class="line">kubectl proxy --address 0.0.0.0</span><br></pre></td></tr></table></figure><p>在宿主机打开 <a href="http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/">http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/</a> 即可看到熟悉的 NGINX 默认首页。(<a href="https://kubernetes.io/zh/docs/tasks/access-application-cluster/access-cluster/#%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA-apiserver-%E4%BB%A3%E7%90%86-url">Kubernetes proxy URL 规则</a>)</p><p><img src="http://img-cdn.xjztest.com/20190305162916-kubernetes_nginx.png.png" alt="Nginx via Kubernetes proxy"> <center><small>Nginx via Kubernetes proxy</small></center></p><h1>完</h1><p>此篇文章省略了在实验期间踩过的大量的坑，如果跟着我的流程下来遇到了什么问题可以先查看上一篇文章「<a href="/Solutions/Local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox.html" title="使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群">使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群</a>」，可能你会找到答案，或者在下方留言评论。</p>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;p&gt;本文章是上一篇文章「&lt;a href=&quot;/Solutions/Local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox.html&quot; title=&quot;使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群&quot;&gt;使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群&lt;/a&gt;」的 TL;DR 版本。&lt;/p&gt;
&lt;h1&gt;目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;启动两个虚拟机，一个作为主节点，一个作为工作节点&lt;/li&gt;
&lt;li&gt;熟悉 Kubeadm&lt;/li&gt;
&lt;li&gt;在集群上部署Kubernetes-dashboard、nginx&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Solutions" scheme="https://blog.stark-x.cn/categories/Solutions/"/>
    
    
    <category term="Kubernetes" scheme="https://blog.stark-x.cn/tags/Kubernetes/"/>
    
    <category term="Vagrant" scheme="https://blog.stark-x.cn/tags/Vagrant/"/>
    
    <category term="Ops" scheme="https://blog.stark-x.cn/tags/Ops/"/>
    
  </entry>
  
  <entry>
    <title>使用Kubeadm, Vagrant, Virtualbox部署本地Kubernetes集群</title>
    <link href="https://blog.stark-x.cn/Solutions/Local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox.html"/>
    <id>https://blog.stark-x.cn/Solutions/Local-kubernetes-cluster-with-kubeadm-vagrant-and-virtualbox.html</id>
    <published>2018-11-14T12:09:31.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- Description to show on index here  --><p>在前一阵子参加了DevOps国际峰会(DevOps International Summit)，《DevOps Handbook》和《Beyond The Phoenix Project》的联合作者 John Willis 在他的分享中提出了“Kubernetes将成为未来的主流”，再加上我所在公司有大量的微服务架构项目使用到了Kubernetes，遂开始学习Kubernetes。那要去学习它就必须得有可操作环境，在<a href="https://kubernetes.io/docs/setup/pick-right-solution/#local-machine-solutions">Kubernetes官网</a>提供了好多个解决方案。</p><p>我选择了难度稍高的 kubeadm 配合由 Vagrant 以及 Virtualbox 搭建的虚拟机创建 Kubernetes 的集群，通过使用 kubeadm 熟悉 Kubernetes 的部署流程以及它的原理。</p><h1>目标</h1><ul><li>启动两个虚拟机，一个作为主节点，一个作为工作节点</li><li>熟悉 Kubeadm</li><li>在集群上部署Kubernetes-dashboard、nginx</li></ul><span id="more"></span><h1>开工</h1><p>我使用MacOS作为运行环境写的这篇文章，在其它操作系统上进行操作可能会有一点不一样。另外，因为 Kubernetes 的镜像在谷歌的服务器，总所周知的原因，请先架好梯子，否则会出现下载不了镜像等“正常”现象。<em><small>梯子方面优先选择付费服务，可以减少你大量的工作。</small></em></p><h2 id="编写-Vagrantfile">编写 Vagrantfile</h2><p>要在本地建立集群，那就先建两个虚拟机吧，这两个虚拟机配置、设定上应该是基本一致的，那就使用 Vagrant 做初始化，环境配置。使用 Vagrant 的一大好处是只需要一份<code>Vagrantfile</code>就可以保证使用它建立起来的虚拟机是一致的，并且自动地把下载镜像、初始化、配置等等全做好了。</p><p>既然是个集群，那它们之间应该可以相互通讯，需要配置一个私有网络；另外，Vagrant 默认创建的网络是 NAT 模式，那要有端口映射，预留端口 10000-&gt;80(master)，10001-&gt;80(node)；根据<a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/#before-you-begin">官网的介绍</a>，所有节点推荐使用至少2核CPU，2G内存；同样根据<a href="https://kubernetes.io/docs/setup/independent/install-kubeadm/#installing-kubeadm-kubelet-and-kubectl">官方文档</a>，需要安装 kubelet，kubectl，kubeadm，docker。根据这些条件，就有了下面的<code>Vagrantfile</code>。</p><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$script</span> = <span class="string">&lt;&lt;-SCRIPT</span></span><br><span class="line"><span class="string">echo &quot;Update and install the kubeadm&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">apt-get update &amp;&amp; apt-get install -y apt-transport-https curl</span></span><br><span class="line"><span class="string">curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -</span></span><br><span class="line"><span class="string">cat &lt;&lt;EOF &gt;/etc/apt/sources.list.d/kubernetes.list</span></span><br><span class="line"><span class="string">deb https://apt.kubernetes.io/ kubernetes-xenial main</span></span><br><span class="line"><span class="string">EOF</span></span><br><span class="line"><span class="string">apt-get update</span></span><br><span class="line"><span class="string">apt-get install -y kubelet kubeadm kubectl docker.io</span></span><br><span class="line"><span class="string">apt-mark hold kubelet kubeadm kubectl</span></span><br><span class="line"><span class="string">usermod -aG docker vagrant</span></span><br><span class="line"><span class="string">kubeadm config images pull</span></span><br><span class="line"><span class="string">SCRIPT</span></span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="string">&quot;2&quot;</span>) <span class="keyword">do</span> |<span class="params">config</span>|</span><br><span class="line">  config.vm.provider <span class="string">&quot;virtualbox&quot;</span> <span class="keyword">do</span> |<span class="params">v</span>|</span><br><span class="line">    v.memory = <span class="number">2048</span></span><br><span class="line">    v.cpus = <span class="number">2</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line">  </span><br><span class="line">  config.vm.define <span class="string">&quot;master&quot;</span>, <span class="symbol">primary:</span> <span class="literal">true</span> <span class="keyword">do</span> |<span class="params">master</span>|</span><br><span class="line">    master.vm.hostname = <span class="string">&quot;k8s-cluster-master&quot;</span></span><br><span class="line">    master.vm.box = <span class="string">&quot;ubuntu/xenial64&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="symbol">guest:</span> <span class="number">80</span>, <span class="symbol">host:</span> <span class="number">10000</span>, <span class="symbol">protocol:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    master.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">type:</span> <span class="string">&quot;dhcp&quot;</span></span><br><span class="line">    master.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="variable">$script</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"></span><br><span class="line">  config.vm.define <span class="string">&quot;node&quot;</span> <span class="keyword">do</span> |<span class="params">node</span>|</span><br><span class="line">    node.vm.hostname = <span class="string">&quot;k8s-cluster-node&quot;</span></span><br><span class="line">    node.vm.box = <span class="string">&quot;ubuntu/xenial64&quot;</span></span><br><span class="line">    node.vm.network <span class="string">&quot;forwarded_port&quot;</span>, <span class="symbol">guest:</span> <span class="number">80</span>, <span class="symbol">host:</span> <span class="number">10001</span>, <span class="symbol">protocol:</span> <span class="string">&quot;tcp&quot;</span></span><br><span class="line">    node.vm.network <span class="string">&quot;private_network&quot;</span>, <span class="symbol">type:</span> <span class="string">&quot;dhcp&quot;</span></span><br><span class="line">    node.vm.provision <span class="string">&quot;shell&quot;</span>, <span class="symbol">inline:</span> <span class="variable">$script</span></span><br><span class="line">  <span class="keyword">end</span></span><br><span class="line"><span class="keyword">end</span></span><br></pre></td></tr></table></figure><h2 id="启动节点">启动节点</h2><p>执行命令<code>vagrant up</code>，Vagrant 开始自动下载Ubuntu镜像，并执行我们写在<code>Vagrantfile</code>里的 Shell 脚本，顺利启动后，在当前窗口执行<code>vagrant ssh master</code>，新开一个窗口执行<code>vagrant ssh node</code>分别 ssh 进入到主节点以及工作节点。 <img src="https://i.loli.net/2018/11/14/5bec3c9cd27ad.png" alt="vagrant"><em><small>第一次执行<code>vagrant up</code>会看到更多的信息。</small></em></p><p>使用命令<code>ip a</code>查看当前节点 ip，两个节点互相 ping，检查连通性。</p><h1>部署</h1><p>过程没有想象中顺利，我完全跟着官网文档操作，却陷进到一连串的坑里，耗费了接近两周的时间才把 Kubernets 集群搭建起来。</p><h2 id="Round-1-Kubernetes-集群">Round 1 - Kubernetes 集群</h2><p>我们一步一步按照<a href="https://kubernetes.io/docs/setup/independent/create-cluster-kubeadm/">官方文档</a>，在主节点 <em>k8s-cluster-master</em> 执行<code>sudo kubeadm init</code>初始化节点，成功后，根据 kubeadm 的输出，执行接下来的命令。</p><ul><li>复制 kubeadm 生成的配置文件，更改配置文件夹的权限<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p $HOME/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) $HOME/.kube/config</span><br></pre></td></tr></table></figure></li><li>选择一个<a href="https://kubernetes.io/docs/concepts/cluster-administration/addons/">CNI 插件</a>组建网络，我们这里选择了<em>Weave Net</em><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f &quot;https://cloud.weave.works/k8s/net?k8s-version=$(kubectl version | base64 | tr -d &#x27;\n&#x27;)&quot;</span><br></pre></td></tr></table></figure></li><li>工作节点执行最后一句<code>sudo kubeadm join</code>，加入到 Kubernetes 集群<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm join 10.0.2.15:6443 --token &lt;token&gt; --discovery-token-ca-cert-hash sha256:&lt;hash&gt;</span><br></pre></td></tr></table></figure></li><li>查看节点状态，Pods 状态</li></ul><p><img src="https://i.loli.net/2018/11/22/5bf656dc473c4.png" alt="Node: master | get pods, get nodes"><center><small>Node: master | get pods, get nodes</small></center></p><p><img src="https://i.loli.net/2018/11/22/5bf65a6319aba.png" alt="Node: worker | kubeadm join"><center><small>Node: worker | kubeadm join</small></center></p><h3 id="Round-1-1-工作节点无法连接到主节点">Round 1.1 - 工作节点无法连接到主节点</h3><p>这里遇到第一个坑，工作节点无法连接到主节点的 Kubernetes api。在工作节点的 <code>kubeadm join</code> log，我们可以看到 kubelet 在不断地尝试访问 10.0.2.15:6443，曾经看过 VirtualBox 的说明文档，默认情况下 ip 10.0.2.15 是在虚拟机在宿主机网络里的 ip，所有的虚拟机都遵循这一设定，而工作节点需要访问的是主节点的 6443 端口，现在却在尝试 10.0.2.15，相当于不断尝试连接节点自身的6443端口，这明显不对。</p><p>因此，我们需要 kubelet 访问/提供正确的节点ip，查阅文档，发现 kubeadm 有一个参数 <code>--apiserver-advertise-address=&lt;ip&gt;</code>，显式指定 kubelet api server 的 ip 地址。</p><p>好吧，执行<code>sudo kubeadm reset</code>，加上参数，重新做一遍。</p><h3 id="Round-1-2-工作节点-Not-Ready">Round 1.2 - 工作节点 Not Ready</h3><p><img src="https://i.loli.net/2018/11/22/5bf65dc1ca316.png" alt="Node: master | kubeadm init"><center><small>Node: master | kubeadm init</small></center><img src="https://i.loli.net/2018/11/22/5bf65d63a35f8.png" alt="Node: worker | kubeadm join"><center><small>Node: worker | kubeadm join</small></center></p><p>执行成功，但是当我们在主节点执行<code>kubectl get nodes</code>, <code>kubectl get pods -n kube-system</code>，可以看到 node: NotReady，weave 的 Pods 一直处于 CrashLoopBackOff 状态(这表示 Pod 创建失败，kubelet 在不断地重试)，在工作节点查看 docker logs 发现 weave 一直在尝试连接 10.96.0.1:443，但是根据 docker logs 显示，以及通过 ping，telnet 检测，全 timeout，目标不可达。<img src="https://i.loli.net/2018/11/22/5bf661e18052d.png" alt="Node: master | get nodes, get pods"><center><small>Node: master | get nodes, get pods</small></center></p><p><img src="https://i.loli.net/2018/11/22/5bf6691bcb58c.png" alt="Node: worker | logs"><center><small>Node: worker | logs</small></center></p><p>这个 ip 地址理应是 Kubernetes 提供的，经过一番查找，在 Services 里找到了这个 ip，<code>kubectl get svc</code>，可以看到返回结果表明 10.96.0.1 是 Kubernetes 本身在集群里的 ip。</p><p>不科学啊，节点之间是通的，难道是 CNI 插件有问题？换一个试试，在官网的教程里有好几个其它插件供选择，这次我选择了 <em>flannel</em>，跟 <em>Weave Net</em> 不太一样的是，它需要在 init 的时候加上一个额外的参数<code>--pod-network-cidr=10.244.0.0/16</code>，net.bridge.bridge-nf-call-iptables 必须设为 1，reset 集群，重新执行命令部署。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sysctl net.bridge.bridge-nf-call-iptables=1</span><br><span class="line">sudo kubeadm init --apiserver-advertise-address 172.28.128.3 --pod-network-cidr=10.244.0.0/16</span><br><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/bc79dd1505b0c8681ece4de4c0d86c5cd2643275/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kubeadm join 172.28.128.3:6443 --token 4puk29.w2ur96jtfuu9z22v --discovery-token-ca-cert-hash sha256:3973ee67977702c144f6f57613f8ce7765eac975990520846a15465fac625043 --apiserver-advertise-address 172.28.128.4</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/22/5bf673fe2a2b2.png" alt="Node: master | get nodes, get pods"><center><small>Node: master | get nodes, get pods</small></center>这次一切都很顺利，<code>kubectl get nodes</code>显示节点 ready，<code>kubectl get pods -n kube-system</code>显示所有 Pods 运行正常，great!</p><h2 id="Round-2-Kubernetes-Dashboard">Round 2 - Kubernetes Dashboard</h2><p>从<a href="https://github.com/kubernetes/dashboard">Kubernetes Dashboard Repo</a>获取部署命令，启动 Kubenetes Proxy，通过它访问 Dashboard: <a href="http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/</a> 。注意这里使用的是虚拟机的 localhost，所以我们更改 VirtualBox 的网络配置，添加一个端口映射到主节点的 8001 端口。(Kubernetes Proxy 就是一个反向代理，把外部请求通过主节点/集群，转发到工作节点/集群，避免直接暴露服务，降低安全风险)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml</span><br><span class="line">kubectl proxy --address 0.0.0.0 <span class="comment"># 允许虚拟机之外的流量</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2018/11/23/5bf768a92f3f2.png" alt="Virtualbox | NAT port mapping"> <center><small>Virtualbox | NAT port mapping</small></center>但事与愿违，又出问题了，从宿主机用浏览器打开上述网址访问 Dashboard，返回如下 json。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;kind&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Status&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;apiVersion&quot;</span><span class="punctuation">:</span> <span class="string">&quot;v1&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;metadata&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    </span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;status&quot;</span><span class="punctuation">:</span> <span class="string">&quot;Failure&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;message&quot;</span><span class="punctuation">:</span> <span class="string">&quot;no endpoints available for service \&quot;https:kubernetes-dashboard:\&quot;&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;reason&quot;</span><span class="punctuation">:</span> <span class="string">&quot;ServiceUnavailable&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;code&quot;</span><span class="punctuation">:</span> <span class="number">503</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="Round-2-1-503">Round 2.1 - 503</h3><p>执行命令<code>kubectl get pods -n kube-system</code>，发现 dashboard 跟之前 Weave Net 一样，无法正常创建 container，在工作节点执行<code>docker logs &lt;contianer_name|container_id&gt;</code>查看CNI插件的日志，发现它还是使用了 NAT 网卡的 ip 10.0.2.15，也就是虚拟机在自己的隔离网络的 ip，无法成功组网，在之前 “get nodes” “get pods” 显示一切正常，只是 <em>flannel</em> 跟 <em>Weave Net</em> 实现方式不一样而已。<img src="https://i.loli.net/2018/11/26/5bfba5999e281.png" alt="Node: worker | docker logs"><center><small>Node: worker | docker logs</small></center></p><p>大致原因清楚了，那怎么解决呢？“get nodes” 会不会有相关信息呢？接着，我找到了一个参数看到了各个节点的 ip，<code>kubectl get nodes -o wide</code>，可以看到所有的节点的 internal ip 都是 10.0.2.15。在刚开始，我不确定这个 “internal ip” 在 Kubernetes 里有什么含义，瞎找了一段时间，甚至修改 dashboard 的 yaml 文件，让它强制运行在主节点，但在后面部署其它 APP 的时候都出现了错误，无法被正常访问，只好继续寻找其它解决办法，最终让我在官方文档找到了更改它的方法。这个 internal ip 定义在 kubelet 的启动参数，默认使用的是系统第一个网卡的 ip，在 kubelet 的启动参数里，它叫 “node-ip”。有两种方法，</p><ol><li>通过 kubeadm 控制 kubelet 启动参数</li><li>直接更改 kubelet 的启动参数</li></ol><p>首先尝试使用第一种方法，然后发现 kubeadm 不可以通过命令参数更改 kubelet 的启动参数，只能通过提供一个包含启动参数的配置文件给 kubeadm。关于这一部分的信息，在网上只有较少可以参考，通过搜索引擎找到了 GitHub 上有 issue 提到了通过创建一个配置文件达到我们的目的，而且我们可以把所有 kubeadm init, kubeadm join 的其它所有参数都定义在 kubeadm 的配置文件里，而 node ip 的更改也比较简单，只需要通过参数 “kubeletExtraArgs” 设置额外的参数个 kubelet 就可以了。</p><p>但有一部分参数，例如关于 “apiserver-advertise-address” 的设定始终不生效，最后凭借 GitHub 上的关键字在 kubeadm 的文档里找到了相关描述，原来它使用的配置文件的方法还是处于 alpha 阶段，而且 kubeadm join 需要用到的 token 是生成的，没办法写死在配置文件，再三考虑，还是放弃了这种办法，还是使用原来的办法，再配合一个脚本，更改 node ip，脚本内容如下，执行完后，重启 kubelet，docker ，使配置生效。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">kubeadm.k8s.io/v1alpha3</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">InitConfiguration</span></span><br><span class="line"><span class="attr">apiEndpoint:</span></span><br><span class="line">  <span class="attr">advertiseAddress:</span> <span class="number">172.28</span><span class="number">.128</span><span class="number">.3</span></span><br><span class="line"><span class="attr">nodeRegistration:</span></span><br><span class="line">  <span class="attr">kubeletExtraArgs:</span></span><br><span class="line">    <span class="attr">node-ip:</span> <span class="number">172.28</span><span class="number">.128</span><span class="number">.3</span></span><br><span class="line"><span class="attr">pod-network-cidr:</span> <span class="number">10.244</span><span class="number">.0</span><span class="number">.0</span><span class="string">/1</span></span><br></pre></td></tr></table></figure><center><small>YAML file for kubeadm init</small></center><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/sh</span></span><br><span class="line"></span><br><span class="line">COND_NODE_IP=`sudo grep <span class="string">&quot;node-ip&quot;</span> /var/lib/kubelet/kubeadm-flags.env | <span class="built_in">wc</span> -l`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;COND_NODE_IP&#125;</span> = 1 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;--node-ip had been set, skipped&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line">sudo sed -i <span class="string">&#x27;/^.*/ s/$/ --node-ip=172.28.128.3/&#x27;</span> /var/lib/kubelet/kubeadm-flags.env</span><br><span class="line">sudo systemctl restart kubelet</span><br></pre></td></tr></table></figure><center><small>Shell script for changing "node ip" on master</small></center><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#/bin/sh</span></span><br><span class="line"></span><br><span class="line">COND_NODE_IP=`sudo grep <span class="string">&quot;node-ip&quot;</span> /var/lib/kubelet/kubeadm-flags.env | <span class="built_in">wc</span> -l`</span><br><span class="line"><span class="keyword">if</span> [[ <span class="variable">$&#123;COND_NODE_IP&#125;</span> = 1 ]]; <span class="keyword">then</span></span><br><span class="line">  <span class="built_in">echo</span> <span class="string">&quot;--node-ip had been set, skipped&quot;</span></span><br><span class="line">  <span class="built_in">exit</span> 0</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line">sudo sed -i <span class="string">&#x27;/^.*/ s/$/ --node-ip=172.28.128.4/&#x27;</span> /var/lib/kubelet/kubeadm-flags.env</span><br><span class="line">sudo systemctl restart kubelet docker</span><br></pre></td></tr></table></figure><center><small>Shell script for changing "node ip" on worker</small></center><p><img src="https://i.loli.net/2018/11/26/5bfbbfd1a210f.png" alt="Node: master | get nodes"> <center><small>Node: master | get nodes</small></center></p><p>尝试部署 dashboard，还是不能访问，期间还尝试了好几种办法，包括：修改 <em>flannel</em> 的 YAML 文件；reset，重建虚拟机；切换其它的 CNI 插件；等等。无头绪之际，在 <em>flannel</em> 的 <a href="https://github.com/coreos/flannel/blob/master/Documentation/troubleshooting.md#vagrant">Github Wik</a> 看到了一个很关键的信息：</p><blockquote><p>Vagrant typically assigns two interfaces to all VMs. The first, for which all hosts are assigned the IP address 10.0.2.15, is for external traffic that gets NATed.</p><p>This may lead to problems with flannel. By default, flannel selects the first interface on a host. This leads to all hosts thinking they have the same public IP address. To prevent this issue, pass the <code>--iface eth1</code> flag to flannel so that the second interface is chosen.</p></blockquote><p>默认使用网卡0？！ IP address 10.0.2.15 ？！这应该就是一直出问题的根源了！为了简单，我们还是切换回 <em>Weave Net</em>，<code>kubeadm reset</code>，把所有的东西重置，继续试验。</p><p>重置完成后，重新按照之前的流程，初始化，安装 CNI 插件（<em>Weave Net</em>）。<em>Weave Net</em> 还是在不断尝试连接 10.96.0.1。结合刚才看到的 <em>flannel</em> 的说明，跟踪路由看看请求去了哪里，在工作节点执行命令<code>traceroute 10.96.0.1</code>，可以在结果看到请求被路由到宿主机的网络了… 难怪一直无法连接，它在尝试连接到我们宿主机的内网 ip 为 10.96.0.1 的机器。</p><p>看下面👇截图里还有一个 ip，路由第一跳是 ip 10.0.2.2<img src="https://i.loli.net/2018/11/27/5bfd0ddf84222.png" alt="Node: worker | traceroute"><center><small>Node: worker | traceroute</small></center></p><p>灵光一动，想起来以前碰到过因为路由设置错误导致的网络问题，特意去复习了一下 Linux 路由知识。在各个节点执行命令<code>ip route</code>查看路由表，可以看到虚拟机的路由表设置是让默认的请求全都通过 10.0.2.2 也就是宿主机的 NAT 网卡作出网络请求，</p><p>工作节点需要正常的连接到主节点，那么就必须让它的流量走 Host Only 网络，也就是网卡1，而不是通过网卡0上的 10.0.2.2 去尝试连接到宿主机的网络主机。</p><p>检查虚拟机 Host Only 的网卡的设置，在宿主机 Terminal 执行<code>ifconfig</code>查看对应的网卡的 ip 地址，这个 ip 就是我们用于让两台虚拟机正常通讯的路由 ip。<img src="https://i.loli.net/2018/11/28/5bfdfba3f3067.png" alt="Check the Host Only ip for route"> <center><small>Check the Host Only ip for route</small></center></p><p>使用 <code>kubeadm reset</code> 重设所有设定，别忘了执行之前写的更改 node-ip 的脚本，执行 ip route 相关的子命令更新路由表，让工作节点所有的流量通过网卡1，进而正确地让主节点、工作节点互相通讯。执行顺序如下。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在各个节点执行</span></span><br><span class="line">ip route <span class="comment">#查看路由表</span></span><br><span class="line">sudo kubeadm reset</span><br><span class="line"></span><br><span class="line"><span class="comment"># master节点</span></span><br><span class="line">sudo kubeadm init --apiserver-advertise-address=172.28.128.3</span><br><span class="line">sudo <span class="built_in">cp</span> -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">kubectl apply -f <span class="string">&quot;https://cloud.weave.works/k8s/net?k8s-version=<span class="subst">$(kubectl version | base64 | tr -d &#x27;\n&#x27;)</span>&quot;</span></span><br><span class="line">bash change-kubelet-node-ip.sh</span><br><span class="line"></span><br><span class="line"><span class="comment"># node节点</span></span><br><span class="line">sudo kubeadm <span class="built_in">join</span> 172.28.128.3:6443 --token &lt;token&gt; --discovery-token-ca-cert-hash &lt;token&gt; --apiserver-advertise-address=172.28.128.4</span><br><span class="line">bash change-kubelet-node-ip.sh</span><br><span class="line">sudo ip route del default via 10.0.2.2 &amp;&amp; sudo ip route add default via 172.28.128.1</span><br></pre></td></tr></table></figure><p>执行以下命令部署 Kubernetes Dashboard，在宿主机访问 <a href="http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login">http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/#!/login</a> 验证部署结果。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v1.10.1/src/deploy/recommended/kubernetes-dashboard.yaml</span><br><span class="line">kubectl proxy --address 0.0.0.0</span><br></pre></td></tr></table></figure><h2 id="Nginx">Nginx</h2><p>创建 NGINX 的yaml。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">ClusterIP</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">9999</span></span><br><span class="line">      <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">revisionHistoryLimit:</span> <span class="number">3</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">svc:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">            <span class="attr">protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><ul><li>执行命令<code>kubectl apply -f nginx-rs.yaml</code> 部署 nginx</li><li>启动 Kubernetes proxy <code>kubectl proxy --address 0.0.0.0</code></li><li>根据官方文档<a href="https://kubernetes.io/zh/docs/tasks/access-application-cluster/access-cluster/#%E6%89%8B%E5%8A%A8%E6%9E%84%E5%BB%BA-apiserver-%E4%BB%A3%E7%90%86-url">相关描述</a>，在宿主机访问如下链接 <a href="http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/">http://localhost:8001/api/v1/namespaces/default/services/nginx/proxy/</a></li><li>如果一切顺利，你将看到如下页面</li></ul><p><img src="https://i.loli.net/2019/03/01/5c78cf3876a85.png" alt="nginx via kube-proxy"><center><small>nginx via kube-proxy</small></center></p><h1>待续</h1><p>当初想写这篇文章是为了记录 Kubernetes 在本地虚拟环境下的集群部署流程的，没想到因为工作变动、踩坑、怠惰，使得这一篇文章拖了这么长的时间，因为对原理不熟，期间重复了很多次操作，以至于整个流程记录下来非常冗长，而且期间中断了好几次，所以语句可能会有不连贯的情况。接下来我将会重整整个流程写一篇姊妹篇 TL;DR 版，敬请期待。</p><h1>参考资料</h1><ul><li><a href="https://github.com/kubernetes/dashboard/issues/916#issuecomment-307761029">Dashboard running on master</a></li><li><a href="https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1alpha3#hdr-Kubeadm_init_configuration_types">kubeadm with command - alpha - InitConfiguration</a></li><li><a href="https://godoc.org/k8s.io/kubernetes/cmd/kubeadm/app/apis/kubeadm/v1alpha3#hdr-Kubeadm_join_configuration_types">kubeadm with command - alpha - JoinConfiguration</a></li><li><a href="https://github.com/kubernetes/kubernetes/issues/44702#issuecomment-304211078">node-ip add to kubelet</a></li><li><a href="https://github.com/coreos/flannel/blob/master/Documentation/troubleshooting.md#vagrant">troubleshooting - vagrant</a></li><li><a href="https://github.com/coreos/flannel/blob/master/Documentation/troubleshooting.md#vagrant">vagrant network interface</a></li><li><a href="https://www.vagrantup.com/docs/networking/public_network.html">vagrant network settings</a></li><li><a href="https://segmentfault.com/a/1190000000638244">ip route usage - 1</a></li><li><a href="https://www.cnblogs.com/EasonJim/p/8424731.html">ip route usage - 2</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;p&gt;在前一阵子参加了DevOps国际峰会(DevOps International Summit)，《DevOps Handbook》和《Beyond The Phoenix Project》的联合作者 John Willis 在他的分享中提出了“Kubernetes将成为未来的主流”，再加上我所在公司有大量的微服务架构项目使用到了Kubernetes，遂开始学习Kubernetes。
那要去学习它就必须得有可操作环境，在&lt;a href=&quot;https://kubernetes.io/docs/setup/pick-right-solution/#local-machine-solutions&quot;&gt;Kubernetes官网&lt;/a&gt;提供了好多个解决方案。&lt;/p&gt;
&lt;p&gt;我选择了难度稍高的 kubeadm 配合由 Vagrant 以及 Virtualbox 搭建的虚拟机创建 Kubernetes 的集群，通过使用 kubeadm 熟悉 Kubernetes 的部署流程以及它的原理。&lt;/p&gt;
&lt;h1&gt;目标&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;启动两个虚拟机，一个作为主节点，一个作为工作节点&lt;/li&gt;
&lt;li&gt;熟悉 Kubeadm&lt;/li&gt;
&lt;li&gt;在集群上部署Kubernetes-dashboard、nginx&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="Solutions" scheme="https://blog.stark-x.cn/categories/Solutions/"/>
    
    
    <category term="Kubernetes" scheme="https://blog.stark-x.cn/tags/Kubernetes/"/>
    
    <category term="Vagrant" scheme="https://blog.stark-x.cn/tags/Vagrant/"/>
    
    <category term="Ops" scheme="https://blog.stark-x.cn/tags/Ops/"/>
    
  </entry>
  
  <entry>
    <title>『上古神器』Vim</title>
    <link href="https://blog.stark-x.cn/Tools/the-great-vim.html"/>
    <id>https://blog.stark-x.cn/Tools/the-great-vim.html</id>
    <published>2018-08-31T12:00:00.000Z</published>
    <updated>2022-04-10T13:43:38.873Z</updated>
    
    <content type="html"><![CDATA[<!-- toc --><!-- Description to show on index here  --><blockquote><p><strong>Vim - the ubiquitous text editor</strong>Vim is a highly configurable text editor for efficiently creating and changing any kind of text. It is included as “vi” with most UNIX systems and with Apple OS X.Vim 是一个可用于高效率创建或者编辑任意类型文本的高度定制化的文本编辑。它以&quot;vi&quot;命令存在于在大多数的UNIX 操作系统以及Apple OS X 中。</p><p align="right">--- https://www.vim.org/</p></blockquote><p>Vim 作为一个“上古”编辑器，它提供了很多很神奇高效的特性，以至于在现代编辑器/强大的IDE的选择之中有一席之地。Vim有一个很合我心意的特性，在使用它的时候，完全不需要使用鼠标，眼睛看到哪就可以编辑哪，现在能支持Vim特性的地方我都安装上了对应的插件，例如Chrome的插件：Vimium, Idea的插件：Ideavim。</p><span id="more"></span><h2 id="入门教程">入门教程</h2><p>网上有大量的入门教程，读者可以自行选择，在此推荐其中几个学习VIM的教程。</p><ul><li>Vim自带的互动教程，安装好Vim之后，在终端执行<code>vimtutor zh_CN</code>进入到互动教程中</li><li><a href="https://vim-adventures.com/">vim-adverntures</a> 线上游戏的方式学习Vim</li><li><a href="https://www.openvim.com/tutorial.html">openvim-tutorial</a> 网页互动教程</li></ul><p><small>* <em>Vim的学习曲线非常陡峭，在学习过程中可能会出现头晕、心悸、想砸键盘等情况。</em></small></p><h2 id="进阶">进阶</h2><p>推荐阅读<a href="https://book.douban.com/subject/25869486/">《Vim实用技巧》(Practical Vim)</a><img src="https://images-na.ssl-images-amazon.com/images/I/614qewK71jL.jpg" alt="Vim实用技巧" width=50%></p><blockquote><p>I’ve been using Vim for server maintenance for more than fifteen years now, but I’ve only recently started using it for software development. I thought I knew Vim, but Practical Vim has massively improved my code-wrangling productivity.</p><p align="right">--- Graeme Mathieson (Software Engineer, Rubaidh Ltd.)</p></blockquote><h2 id="As-IDE">As IDE</h2><p>在学习了以上的内容，相信读者已经可以使用Vim进行大部分的文本编辑工作了，但是把它作为写代码的工具，在没有经过任何配置的情况下，会让人觉得缺了点什么，没法作为主要编辑器，这个时候Vim的一大特性 — 插件，可以发挥它的作用了。配合适当的插件，Vim可以拥有文件树、自动补全等IDE提供的特性。当然，在进行<strong>大项目</strong>的开发、重构的时候，我还是推荐使用IDE配合Vim插件。</p><h3 id="vimrc-位置">vimrc 位置</h3><p>在Vim里执行<code>:help vimrc</code>，帮助文档里有列出vimrc的位置。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Places for your personal initializations:</span><br><span class="line">        Unix$HOME/.vimrc or $HOME/.vim/vimrc</span><br><span class="line">        OS/2$HOME/.vimrc, $HOME/vimfiles/vimrc</span><br><span class="line">                        or $VIM/.vimrc (or _vimrc)</span><br><span class="line">        MS-Windows$HOME/_vimrc, $HOME/vimfiles/vimrc</span><br><span class="line">                        or $VIM/_vimrc</span><br><span class="line">        Amigas:.vimrc, home:.vimrc, home:vimfiles:vimrc</span><br><span class="line">                        or $VIM/.vimrc</span><br></pre></td></tr></table></figure><h3 id="插件">插件</h3><p>以下列表是我使用的插件，我使用了<a href="https://github.com/junegunn/vim-plug"><code>Plug</code></a>管理这些插件，曾经我使用的是<a href="https://github.com/VundleVim/Vundle.vim"><code>Vundle</code></a>，后来发现Plug有更强大的特性，就切换过去了。相对于<code>Vundle</code>，<code>Plug</code>还支持异步加载、异步更新、自定义触发安装函数等特性，大大增加了管理插件的效率、便捷性，最重要的是<code>Vundle</code>已经有差不多4年没有新的Release了。</p><ul><li><a href="https://github.com/tpope/vim-fugitive">tpope/vim-fugitive</a>: Vim里使用Git</li><li><a href="https://github.com/Valloric/YouCompleteMe"><strong>Valloric/YouCompleteMe</strong></a>: 必装，代码补全，代码提示</li><li><a href="https://github.com/Yggdroot/indentLine">Yggdroot/indentLine</a>: 缩进参考线</li><li><a href="https://github.com/scrooloose/nerdtree">scrooloose/nerdtree</a>: 文件目录树</li><li><a href="https://github.com/Xuyuanp/nerdtree-git-plugin">Xuyuanp/nerdtree-git-plugin</a>: 在目录树中标识Git的仓库变更</li><li><a href="https://github.com/scrooloose/nerdcommenter"><strong>scrooloose/nerdcommenter</strong></a>: 必装，快捷注释</li><li><a href="https://github.com/plasticboy/vim-markdown">plasticboy/vim-markdown</a>: 支持Markdown语法高亮</li><li><a href="https://github.com/iamcco/markdown-preview.vim">iamcco/markdown-preview.vim</a>: Markdown预览</li><li><a href="https://github.com/vim-airline/vim-airline">vim-airline/vim-airline</a>: 优化的状态栏</li><li><a href="https://github.com/vim-airline/vim-airline-themes">vim-airline/vim-airline-themes</a>: 状态栏主题</li><li><a href="https://github.com/SirVer/ultisnips">SirVer/ultisnips</a>: 代码块支持，类似Idea系列的Live-Template</li><li><a href="https://github.com/honza/vim-snippets">honza/vim-snippets</a>: 默认代码块，与&quot;ultisnips&quot;配合</li><li><a href="https://github.com/terryma/vim-multiple-cursors">terryma/vim-multiple-cursors</a>: 支持多处同时修改</li><li><a href="https://github.com/altercation/vim-colors-solarized">altercation/vim-colors-solarized</a>: solarized主题</li><li><a href="https://github.com/morhetz/gruvbox">morhetz/gruvbox</a>: gruvbox主题</li><li><a href="https://github.com/mattn/emmet-vim"><strong>mattn/emmet-vim</strong></a>: 前端程序员必装，快速编写标签</li><li><a href="https://github.com/tpope/vim-surround">tpope/vim-surround</a>: 快速包括括号</li><li><a href="https://github.com/tpope/vim-repeat">tpope/vim-repeat</a>: 让<code>.</code>正确重复部分插件的动作</li><li><a href="https://github.com/leafgarland/typescript-vim">leafgarland/typescript-vim</a>: 支持Typescript</li><li><a href="https://github.com/w0rp/ale">w0rp/ale</a>: 异步Lint引擎</li><li><a href="https://github.com/posva/vim-vue">posva/vim-vue</a>: 支持Vue</li><li><a href="https://github.com/jiangmiao/auto-pairs">jiangmiao/auto-pairs</a>: 自动补全括号，快速包括括号</li><li><a href="https://github.com/junegunn/vim-easy-align">junegunn/vim-easy-align</a>: 快速对齐</li><li><a href="https://github.com/easymotion/vim-easymotion">easymotion/vim-easymotion</a>: 快速移动当前光标</li><li><a href="https://github.com/python-mode/python-mode">python-mode/python-mode</a>: 增强对Python的支持</li><li><a href="https://github.com/vim-scripts/groovyindent-unix">vim-scripts/groovyindent-unix</a>: 正确的Groovy缩进</li><li><a href="https://github.com/Chiel92/vim-autoformat">Chiel92/vim-autoformat</a>: 正确的格式化代码</li><li><a href="https://github.com/arecarn/vim-fold-cycle">arecarn/vim-fold-cycle</a>: 快速展开关闭折叠</li><li><a href="https://github.com/pseewald/vim-anyfold">pseewald/vim-anyfold</a>: 优化缩进</li><li><a href="https://github.com/xolox/vim-easytags">xolox/vim-easytags</a>: 自动生成tag（用于列出函数/方法）</li><li><a href="https://github.com/vim-scripts/taglist.vim">vim-scripts/taglist.vim</a>: 官方tag支持</li><li><a href="https://github.com/xolox/vim-misc">xolox/vim-misc</a>: xolox的插件的支持</li><li><a href="https://github.com/chemzqm/wxapp.vim">chemzqm/wxapp.vim</a>: 支持微信小程序开发</li><li><a href="https://github.com/sheerun/vim-polyglot">sheerun/vim-polyglot</a>: 语法支持增强</li><li><a href="https://github.com/mileszs/ack.vim">mileszs/ack.vim</a>: 文件内容快速搜索（当前工作目录下的所有文件）</li><li><a href="https://github.com/junegunn/fzf">junegunn/fzf</a>: 模糊搜索的依赖</li><li><a href="https://github.com/junegunn/fzf.vim">junegunn/fzf.vim</a>: 文件名、目录模糊搜索（当前工作目录下的所有文件）</li></ul><h2 id="参考配置">参考配置</h2><p>Github: <a href="https://github.com/Stark-X/dotfiles/blob/master/vim/.vimrc">https://github.com/Stark-X/dotfiles/blob/master/vim/.vimrc</a>这是我的vimrc，读者可以根据自己的习惯作出相应调整，欢迎大家在评论区提出建议、疑问。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&quot; Remove python3(3.7) importlib deprecated warning</span></span><br><span class="line"><span class="string">&quot; It had been fixed from &quot;</span>patch-<span class="number">8.1</span>.<span class="number">201</span><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot; https://github.com/vim/vim/issues/3117</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;python3&#x27;</span>) &amp;&amp; !has(<span class="string">&#x27;patch-8.1.201&#x27;</span>)</span><br><span class="line">  silent! <span class="keyword">python3</span> <span class="number">1</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;set nocompatible              &quot;</span> <span class="keyword">be</span> iMproved, required</span><br><span class="line"><span class="keyword">filetype</span> off                  <span class="comment">&quot; required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Initialize for the vim-plug</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;win32&#x27;</span>)</span><br><span class="line">    <span class="comment">&quot; set rtp+=$USERPROFILE/vimfiles/bundle/Vundle.vim/</span></span><br><span class="line">    <span class="keyword">call</span> plug#begin(<span class="string">&#x27;$USERPROFILE/vimfiles/bundle/&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment">&quot; set rtp+=~/.vim/bundle/Vundle.vim/</span></span><br><span class="line">    <span class="keyword">call</span> plug#begin(<span class="string">&#x27;~/.vim/bundle/&#x27;</span>)</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;tpope/vim-fugitive&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-scripts/L9&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Post-update hooks to compile the YCM</span></span><br><span class="line"><span class="comment">&quot; ==================== YouCompleteMe ====================</span></span><br><span class="line"><span class="keyword">function!</span> <span class="title">BuildYCM</span><span class="params">(info)</span></span><br><span class="line">  <span class="comment">&quot; info is a dictionary with 3 fields</span></span><br><span class="line">  <span class="comment">&quot; - name:   name of the plugin</span></span><br><span class="line">  <span class="comment">&quot; - status: &#x27;installed&#x27;, &#x27;updated&#x27;, or &#x27;unchanged&#x27;</span></span><br><span class="line">  <span class="comment">&quot; - force:  set on PlugInstall! or PlugUpdate!</span></span><br><span class="line">  <span class="keyword">if</span> <span class="variable">a:info</span>.status == <span class="string">&#x27;installed&#x27;</span> || <span class="variable">a:info</span>.force</span><br><span class="line">    !./install.<span class="keyword">py</span> --<span class="keyword">go</span>-completer --js-completer --java-completer --clang-completer</span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line">Plug <span class="string">&#x27;Valloric/YouCompleteMe&#x27;</span>, &#123; <span class="string">&#x27;do&#x27;</span>: <span class="keyword">function</span>(<span class="string">&#x27;BuildYCM&#x27;</span>) &#125;</span><br><span class="line"><span class="comment">&quot; ==================== YouCompleteMe ====================</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;Yggdroot/indentLine&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;scrooloose/nerdtree&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>: <span class="string">&#x27;NERDTreeToggle&#x27;</span> &#125;</span><br><span class="line">Plug <span class="string">&#x27;Xuyuanp/nerdtree-git-plugin&#x27;</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;f3&gt;</span> :NERDTreeToggle<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; Ignore *.pyc</span></span><br><span class="line"><span class="keyword">let</span> NERDTreeIgnore = [<span class="string">&#x27;\.pyc$&#x27;</span>]</span><br><span class="line">autocmd! User nerdtree <span class="keyword">echom</span> <span class="string">&#x27;NERDTree is now loaded.&#x27;</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;scrooloose/nerdcommenter&#x27;</span></span><br><span class="line"><span class="comment">&quot; markdown syntax highlight</span></span><br><span class="line">Plug <span class="string">&#x27;plasticboy/vim-markdown&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;iamcco/markdown-preview.vim&#x27;</span>, &#123; <span class="string">&#x27;for&#x27;</span>: <span class="string">&#x27;markdown&#x27;</span> &#125;</span><br><span class="line">autocmd! User markdown-preview.<span class="keyword">vim</span> <span class="keyword">echom</span> <span class="string">&#x27;MarkdownPreview is now loaded.&#x27;</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;vim-airline/vim-airline-themes&#x27;</span></span><br><span class="line"><span class="comment">&quot; ==================== Snippets ====================</span></span><br><span class="line">Plug <span class="string">&#x27;SirVer/ultisnips&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;honza/vim-snippets&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:UltiSnipsExpandTrigger</span>=<span class="string">&quot;&lt;tab&gt;&lt;tab&gt;&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:UltiSnipsJumpForwardTrigger</span>=<span class="string">&quot;&lt;c-b&gt;&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:UltiSnipsJumpBackwardTrigger</span>=<span class="string">&quot;&lt;c-z&gt;&quot;</span></span><br><span class="line"><span class="comment">&quot; ==================== Snippets ====================</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;terryma/vim-multiple-cursors&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;altercation/vim-colors-solarized&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;morhetz/gruvbox&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;mattn/emmet-vim&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;tpope/vim-surround&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;tpope/vim-repeat&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;leafgarland/typescript-vim&#x27;</span></span><br><span class="line"><span class="comment">&quot; Plug &#x27;ctrlpvim/ctrlp.vim&#x27;</span></span><br><span class="line"><span class="comment">&quot; Asynchronous Lint Engine</span></span><br><span class="line">Plug <span class="string">&#x27;w0rp/ale&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;posva/vim-vue&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;jiangmiao/auto-pairs&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;junegunn/vim-easy-align&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;easymotion/vim-easymotion&#x27;</span></span><br><span class="line"><span class="comment">&quot; Themes</span></span><br><span class="line">Plug <span class="string">&#x27;sjl/badwolf&#x27;</span></span><br><span class="line"><span class="comment">&quot; Optimization for Python</span></span><br><span class="line">Plug <span class="string">&#x27;python-mode/python-mode&#x27;</span>, &#123; <span class="string">&#x27;for&#x27;</span>: <span class="string">&#x27;python&#x27;</span> &#125;</span><br><span class="line">autocmd! User <span class="keyword">python</span>-<span class="keyword">mode</span> <span class="keyword">echom</span> <span class="string">&#x27;Python-Mode is now loaded.&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== Auto Format ====================</span></span><br><span class="line">Plug <span class="string">&#x27;vim-scripts/groovyindent-unix&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;Chiel92/vim-autoformat&#x27;</span></span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;F4&gt;</span> :Autoformat<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:formatter_yapf_style</span> = <span class="string">&#x27;pep8&#x27;</span></span><br><span class="line"><span class="comment">&quot; ==================== Auto Format ====================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== Code Folding ====================</span></span><br><span class="line">Plug <span class="string">&#x27;arecarn/vim-fold-cycle&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;pseewald/vim-anyfold&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:fold_cycle_default_mapping</span> = <span class="number">0</span> <span class="comment">&quot;disable default mappings</span></span><br><span class="line"><span class="keyword">nmap</span> &lt;+&gt; <span class="symbol">&lt;Plug&gt;</span>(<span class="keyword">fold</span>-cycle-<span class="keyword">open</span>)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;-&gt;</span> <span class="symbol">&lt;Plug&gt;</span>(<span class="keyword">fold</span>-cycle-<span class="keyword">close</span>)</span><br><span class="line"><span class="keyword">autocmd</span> Filetype <span class="keyword">python</span> <span class="keyword">let</span> <span class="variable">b:anyfold_activate</span>=<span class="number">1</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">foldlevel</span>=<span class="number">0</span></span><br><span class="line"><span class="comment">&quot; ==================== Code Folding ====================</span></span><br><span class="line"><span class="comment">&quot; ==================== Tags Generator ====================</span></span><br><span class="line"><span class="comment">&quot; Use ^] to jump to definiation</span></span><br><span class="line">Plug <span class="string">&#x27;xolox/vim-easytags&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;xolox/vim-misc&#x27;</span></span><br><span class="line"><span class="comment">&quot; ==================== Tags Generator ====================</span></span><br><span class="line"><span class="comment">&quot; ==================== Tag List ====================</span></span><br><span class="line">Plug <span class="string">&#x27;vim-scripts/taglist.vim&#x27;</span>, &#123; <span class="string">&#x27;on&#x27;</span>: <span class="string">&#x27;TlistToggle&#x27;</span> &#125;</span><br><span class="line"><span class="keyword">noremap</span> <span class="symbol">&lt;F2&gt;</span> :TlistToggle<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; ==================== Tag List ====================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== WeChat App ====================</span></span><br><span class="line">Plug <span class="string">&#x27;chemzqm/wxapp.vim&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:neomake_wxml_enabled_makers</span> = [<span class="string">&#x27;tidy&#x27;</span>, <span class="string">&#x27;stylelint&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:user_emmet_settings</span> = &#123;</span><br><span class="line">  \ <span class="string">&#x27;wxss&#x27;</span>: &#123;</span><br><span class="line">  \   <span class="string">&#x27;extends&#x27;</span>: <span class="string">&#x27;css&#x27;</span>,</span><br><span class="line">  \ &#125;,</span><br><span class="line">  \ <span class="string">&#x27;wxml&#x27;</span>: &#123;</span><br><span class="line">  \   <span class="string">&#x27;extends&#x27;</span>: <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">  \   <span class="string">&#x27;aliases&#x27;</span>: &#123;</span><br><span class="line">  \     <span class="string">&#x27;div&#x27;</span>: <span class="string">&#x27;view&#x27;</span>,</span><br><span class="line">  \     <span class="string">&#x27;span&#x27;</span>: <span class="string">&#x27;text&#x27;</span>,</span><br><span class="line">  \   &#125;,</span><br><span class="line">  \  <span class="string">&#x27;default_attributes&#x27;</span>: &#123;</span><br><span class="line">  \     <span class="string">&#x27;block&#x27;</span>: [&#123;<span class="string">&#x27;wx:for-items&#x27;</span>: <span class="string">&#x27;&#123;&#123;list&#125;&#125;&#x27;</span>,<span class="string">&#x27;wx:for-item&#x27;</span>: <span class="string">&#x27;&#123;&#123;item&#125;&#125;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;navigator&#x27;</span>: [&#123;<span class="string">&#x27;url&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;redirect&#x27;</span>: <span class="string">&#x27;false&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;scroll-view&#x27;</span>: [&#123;<span class="string">&#x27;bindscroll&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;swiper&#x27;</span>: [&#123;<span class="string">&#x27;autoplay&#x27;</span>: <span class="string">&#x27;false&#x27;</span>, <span class="string">&#x27;current&#x27;</span>: <span class="string">&#x27;0&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;icon&#x27;</span>: [&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;success&#x27;</span>, <span class="string">&#x27;size&#x27;</span>: <span class="string">&#x27;23&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;progress&#x27;</span>: [&#123;<span class="string">&#x27;precent&#x27;</span>: <span class="string">&#x27;0&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;button&#x27;</span>: [&#123;<span class="string">&#x27;size&#x27;</span>: <span class="string">&#x27;default&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;checkbox-group&#x27;</span>: [&#123;<span class="string">&#x27;bindchange&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;checkbox&#x27;</span>: [&#123;<span class="string">&#x27;value&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;checked&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;form&#x27;</span>: [&#123;<span class="string">&#x27;bindsubmit&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;input&#x27;</span>: [&#123;<span class="string">&#x27;type&#x27;</span>: <span class="string">&#x27;text&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;label&#x27;</span>: [&#123;<span class="string">&#x27;for&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;picker&#x27;</span>: [&#123;<span class="string">&#x27;bindchange&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;radio-group&#x27;</span>: [&#123;<span class="string">&#x27;bindchange&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;radio&#x27;</span>: [&#123;<span class="string">&#x27;checked&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;switch&#x27;</span>: [&#123;<span class="string">&#x27;checked&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;slider&#x27;</span>: [&#123;<span class="string">&#x27;value&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;action-sheet&#x27;</span>: [&#123;<span class="string">&#x27;bindchange&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;modal&#x27;</span>: [&#123;<span class="string">&#x27;title&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;loading&#x27;</span>: [&#123;<span class="string">&#x27;bindchange&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;toast&#x27;</span>: [&#123;<span class="string">&#x27;duration&#x27;</span>: <span class="string">&#x27;1500&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;audio&#x27;</span>: [&#123;<span class="string">&#x27;src&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;video&#x27;</span>: [&#123;<span class="string">&#x27;src&#x27;</span>: <span class="string">&#x27;&#x27;</span>&#125;],</span><br><span class="line">  \     <span class="string">&#x27;image&#x27;</span>: [&#123;<span class="string">&#x27;src&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;mode&#x27;</span>: <span class="string">&#x27;scaleToFill&#x27;</span>&#125;],</span><br><span class="line">  \   &#125;</span><br><span class="line">  \ &#125;,</span><br><span class="line">  \&#125;</span><br><span class="line"><span class="comment">&quot; ==================== WeChat App ====================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== Syntax Support  ====================</span></span><br><span class="line"><span class="comment">&quot; Plug &#x27;martinda/Jenkinsfile-vim-syntax&#x27;</span></span><br><span class="line">Plug <span class="string">&#x27;sheerun/vim-polyglot&#x27;</span></span><br><span class="line"><span class="comment">&quot; ==================== Syntax Support  ====================</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== ACK ====================</span></span><br><span class="line"><span class="comment">&quot; Take place the vimgrep</span></span><br><span class="line"><span class="keyword">function!</span> <span class="title">Install_ag</span><span class="params">(info)</span></span><br><span class="line">    <span class="comment">&quot; info is a dictionary with 3 fields</span></span><br><span class="line">    <span class="comment">&quot; - name:   name of the plugin</span></span><br><span class="line">    <span class="comment">&quot; - status: &#x27;installed&#x27;, &#x27;updated&#x27;, or &#x27;unchanged&#x27;</span></span><br><span class="line">    <span class="comment">&quot; - force:  set on PlugInstall! or PlugUpdate!</span></span><br><span class="line">    <span class="keyword">if</span> <span class="variable">a:info</span>.status == <span class="string">&#x27;installed&#x27;</span> || <span class="variable">a:info</span>.force</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;macunix&#x27;</span>)</span><br><span class="line">            !brew install the_silver_searcher </span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;Please access https://github.com/ggreer/the_silver_searcher for the installation&#x27;</span></span><br><span class="line">        <span class="keyword">endif</span></span><br><span class="line">    <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"><span class="comment">&quot; Use ag(the_silver_searcher) as the search engine</span></span><br><span class="line">Plug <span class="string">&#x27;mileszs/ack.vim&#x27;</span>, &#123; <span class="string">&#x27;do&#x27;</span>: <span class="keyword">function</span>(<span class="string">&#x27;Install_ag&#x27;</span>) &#125;</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ackprg</span> = <span class="string">&#x27;ag --vimgrep --hidden&#x27;</span></span><br><span class="line"><span class="comment">&quot; ==================== ACK ====================</span></span><br><span class="line"></span><br><span class="line">Plug <span class="string">&#x27;junegunn/fzf&#x27;</span>, &#123; <span class="string">&#x27;dir&#x27;</span>: <span class="string">&#x27;~/.fzf&#x27;</span>, <span class="string">&#x27;do&#x27;</span>: <span class="string">&#x27;./install --all&#x27;</span> &#125;</span><br><span class="line">Plug <span class="string">&#x27;junegunn/fzf.vim&#x27;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;leader&gt;</span><span class="symbol">&lt;tab&gt;</span> <span class="symbol">&lt;plug&gt;</span>(fzf-maps-n)</span><br><span class="line"><span class="keyword">xmap</span> <span class="symbol">&lt;leader&gt;</span><span class="symbol">&lt;tab&gt;</span> <span class="symbol">&lt;plug&gt;</span>(fzf-maps-<span class="keyword">x</span>)</span><br><span class="line"><span class="keyword">omap</span> <span class="symbol">&lt;leader&gt;</span><span class="symbol">&lt;tab&gt;</span> <span class="symbol">&lt;plug&gt;</span>(fzf-maps-<span class="keyword">o</span>)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;C-P&gt;</span> :Files<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; All of your Plugs must be added before the following line</span></span><br><span class="line"><span class="keyword">call</span> plug#end()            <span class="comment">&quot; required</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; To ignore plugin indent changes, instead use:</span></span><br><span class="line"><span class="comment">&quot;filetype plugin on</span></span><br><span class="line"><span class="comment">&quot;</span></span><br><span class="line"><span class="comment">&quot;-----------------------------------------------------------------------------------</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Configuration file for vim</span></span><br><span class="line"><span class="keyword">set</span> modelines=<span class="number">0</span><span class="comment">&quot; CVE-2007-2438</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Normally we use vim-extensions. If you want true vi-compatibility</span></span><br><span class="line"><span class="comment">&quot; remove change the following statements</span></span><br><span class="line"><span class="keyword">set</span> nocompatible<span class="comment">&quot; Use Vim defaults instead of 100% vi compatibility</span></span><br><span class="line"><span class="keyword">set</span> backspace=<span class="number">2</span><span class="comment">&quot; more powerful backspacing</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot; Don&#x27;t write backup file if vim is being called by &quot;</span>crontab -<span class="keyword">e</span><span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">au</span> BufWrite /private/tmp/crontab.* <span class="keyword">set</span> nowritebackup</span><br><span class="line"><span class="string">&quot; Don&#x27;t write backup file if vim is being called by &quot;</span>chpass<span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">au</span> BufWrite /private/etc/<span class="keyword">pw</span>.* <span class="keyword">set</span> nowritebackup</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; theme</span></span><br><span class="line"><span class="keyword">set</span> background=dark</span><br><span class="line"><span class="comment">&quot; let g:solarized_termcolors=256</span></span><br><span class="line"><span class="comment">&quot; colorscheme solarized</span></span><br><span class="line"><span class="comment">&quot;colorscheme desert</span></span><br><span class="line"><span class="comment">&quot; colorscheme gruvbox </span></span><br><span class="line"><span class="string">&quot; let g:gruvbox_contrast_dark=&quot;</span>hard<span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">colorscheme</span> badwolf</span><br><span class="line"><span class="keyword">set</span> guifont=Source_Code_Pro:h13</span><br><span class="line"></span><br><span class="line"><span class="keyword">set</span> hls</span><br><span class="line"><span class="keyword">set</span> <span class="keyword">nu</span></span><br><span class="line"><span class="keyword">set</span> tabstop=<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> <span class="built_in">shiftwidth</span>=<span class="number">4</span></span><br><span class="line"><span class="keyword">set</span> softtabstop=<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> smarttab</span><br><span class="line"><span class="keyword">set</span> smartindent</span><br><span class="line"><span class="keyword">set</span> expandtab</span><br><span class="line"><span class="comment">&quot;突出显示当前行</span></span><br><span class="line"><span class="keyword">set</span> cursorline</span><br><span class="line"><span class="comment">&quot;开启状态栏</span></span><br><span class="line"><span class="keyword">set</span> laststatus=<span class="number">2</span></span><br><span class="line"><span class="comment">&quot;显示输入的命令</span></span><br><span class="line"><span class="keyword">set</span> showcmd</span><br><span class="line"><span class="comment">&quot;在状态栏显示当前光标位置</span></span><br><span class="line"><span class="keyword">set</span> ruler</span><br><span class="line"><span class="comment">&quot;命令模式下按tab列出补全的命令</span></span><br><span class="line"><span class="keyword">set</span> wildmenu</span><br><span class="line"></span><br><span class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;C-c&gt;</span> <span class="comment">&quot;+y</span></span><br><span class="line"><span class="keyword">imap</span> jk <span class="symbol">&lt;Esc&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">autocmd</span> FileType <span class="keyword">c</span>,cpp <span class="keyword">setlocal</span> <span class="built_in">cindent</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType feature <span class="keyword">setlocal</span> <span class="built_in">shiftwidth</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType <span class="keyword">make</span> <span class="keyword">setlocal</span> noet</span><br><span class="line"><span class="keyword">autocmd</span> FileType groovy <span class="keyword">setlocal</span> <span class="built_in">cindent</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType yaml,<span class="keyword">conf</span>,json,javascript,vue,markdown <span class="keyword">setlocal</span> <span class="built_in">cindent</span> <span class="keyword">sw</span>=<span class="number">2</span></span><br><span class="line"><span class="keyword">autocmd</span> Filetype markdown <span class="keyword">setlocal</span> spell</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; for typescript-vim</span></span><br><span class="line"><span class="keyword">autocmd</span> QuickFixCmdPost [^<span class="keyword">l</span>]* nested <span class="keyword">cwindow</span></span><br><span class="line"><span class="keyword">autocmd</span> QuickFixCmdPost    <span class="keyword">l</span>* nested <span class="keyword">lwindow</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType typescript :<span class="keyword">setlocal</span> makeprg=tsc <span class="comment">&quot; find the tsconfig.json to compile</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;markdown-setting: YAML</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_frontmatter</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;YCM_Settings</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;leader&gt;</span>jd :YcmCompleter GoToDefinitionElseDeclaration<span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="comment">&quot; nnoremap &lt;F5&gt; :YcmForceCompileAndDiagnostics&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:syntastic_cpp_compiler</span>=<span class="string">&#x27;g++&#x27;</span> <span class="comment">&quot;change the compiler to &#x27;g++&#x27; to support c++11</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:syntastic_cpp_compiler_options</span>=<span class="string">&#x27;-std=c++11 -stdlib=libc++&#x27;</span>  <span class="comment">&quot;set the options of g++ to support c++11</span></span><br><span class="line"><span class="comment">&quot; YCM with TypeScript</span></span><br><span class="line"><span class="keyword">if</span> !exists(<span class="string">&quot;g:ycm_semantic_triggers&quot;</span>)</span><br><span class="line">  <span class="keyword">let</span> <span class="variable">g:ycm_semantic_triggers</span> = &#123;&#125;</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_semantic_triggers</span>[<span class="string">&#x27;typescript&#x27;</span>] = [<span class="string">&#x27;.&#x27;</span>]</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_autoclose_preview_window_after_completion</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ycm_server_python_interpreter</span> = <span class="string">&#x27;python3&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;MarkdownPreview-KeyMapping</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;F8&gt;</span> <span class="symbol">&lt;Plug&gt;</span>MarkdownPreview        <span class="comment">&quot; for normal mode</span></span><br><span class="line"><span class="keyword">imap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;F8&gt;</span> <span class="symbol">&lt;Plug&gt;</span>MarkdownPreview        <span class="comment">&quot; for insert mode</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;F9&gt;</span> <span class="symbol">&lt;Plug&gt;</span>StopMarkdownPreview    <span class="comment">&quot; for normal mode</span></span><br><span class="line"><span class="keyword">imap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;F9&gt;</span> <span class="symbol">&lt;Plug&gt;</span>StopMarkdownPreview    <span class="comment">&quot; for insert mode</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;win32&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">g:mkdp_path_to_chrome</span> = <span class="string">&#x27;C:\Program Files (x86)\Google\Chrome\Application\chrome.exe&#x27;</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;macunix&#x27;</span>)</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">g:mkdp_path_to_chrome</span> = <span class="string">&quot;open -a Google\\ Chrome&quot;</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&quot;gui_macvim&quot;</span>)</span><br><span class="line">    <span class="comment">&quot; Only work on MacVim, the iTerm2 will use ^[</span></span><br><span class="line">    <span class="keyword">set</span> macmeta</span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:mkdp_auto_close</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:mkdp_auto_open</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot;copy and paste</span></span><br><span class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">y</span> <span class="comment">&quot;+y</span></span><br><span class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">p</span> <span class="comment">&quot;+p</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">p</span> <span class="comment">&quot;+p</span></span><br><span class="line"><span class="keyword">vmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">P</span> <span class="comment">&quot;+P</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;Leader&gt;</span><span class="keyword">P</span> <span class="comment">&quot;+P</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; default width and height</span></span><br><span class="line"><span class="comment">&quot; set lines=27 columns=100</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Emmet (C-y ,)</span></span><br><span class="line"><span class="keyword">autocmd</span> FileType html,css,vue EmmetInstall</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; let the markdown files link normal</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:vim_markdown_conceal</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; vertical split resize</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-w&gt;</span>[ :<span class="keyword">vertical</span> <span class="keyword">resize</span> -<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;c-w&gt;</span>] :<span class="keyword">vertical</span> <span class="keyword">resize</span> +<span class="number">5</span><span class="symbol">&lt;CR&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; improve performance</span></span><br><span class="line"><span class="keyword">set</span> lazyredraw</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; airline realted</span></span><br><span class="line"><span class="string">&quot; let g:airline_theme=&quot;</span>wombat<span class="comment">&quot;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_theme</span>=<span class="string">&#x27;badwolf&#x27;</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline_powerline_fonts</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:airline</span>#extensions#tabline#enabled = <span class="number">1</span></span><br><span class="line"><span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line"><span class="keyword">set</span> rop=<span class="built_in">type</span>:directx,gamm<span class="variable">a:1</span>.<span class="number">0</span>,contras<span class="variable">t:0</span>.<span class="number">5</span>,leve<span class="variable">l:1</span>,geom:<span class="number">1</span>,renmode:<span class="number">4</span>,taamode:<span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; makes the % command work better</span></span><br><span class="line">packadd matchit</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ALE setting</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ale_echo_msg_format</span> = <span class="string">&#x27;[%linter%] %s [%severity%]&#x27;</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;C-k&gt;</span> <span class="symbol">&lt;Plug&gt;</span>(ale_previous_wrap)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;silent&gt;</span> <span class="symbol">&lt;C-j&gt;</span> <span class="symbol">&lt;Plug&gt;</span>(ale_next_wrap)</span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ale_linters</span> = &#123;</span><br><span class="line">\   <span class="string">&#x27;javascript&#x27;</span>: [<span class="string">&#x27;standard&#x27;</span>],</span><br><span class="line">\   <span class="string">&#x27;typescript&#x27;</span>: [<span class="string">&#x27;tslint&#x27;</span>],</span><br><span class="line">\   <span class="string">&#x27;python&#x27;</span>: [<span class="string">&#x27;autopep8&#x27;</span>]</span><br><span class="line">\&#125;</span><br><span class="line"><span class="comment">&quot; Fix files when they are saved.</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ale_fix_on_save</span> = <span class="number">1</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">b:ale_fixers</span> = [<span class="string">&#x27;prettier&#x27;</span>, <span class="string">&#x27;eslint&#x27;</span>, <span class="string">&#x27;autopep8&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">has</span>(<span class="string">&#x27;win32&#x27;</span>)</span><br><span class="line">    <span class="keyword">source</span> $VIMRUNTIME/mswin.<span class="keyword">vim</span></span><br><span class="line">    <span class="keyword">behave</span> mswin</span><br><span class="line">    <span class="keyword">set</span> encoding=utf-<span class="number">8</span></span><br><span class="line">    <span class="keyword">set</span> fileencodings=ucs-bom,utf-<span class="number">8</span>,cp936,gb18030,big5,euc-jp,euc-kr,latin1</span><br><span class="line">    <span class="keyword">set</span> fileencoding=utf-<span class="number">8</span> <span class="comment">&quot; 新建文件使用的编码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&quot; 解决菜单乱码</span></span><br><span class="line">    <span class="keyword">set</span> langmenu=zh_CN</span><br><span class="line">    <span class="keyword">let</span> $LANG = <span class="string">&#x27;zh_CN.UTF-8&#x27;</span></span><br><span class="line">    <span class="keyword">source</span> $VIMRUNTIME/delmenu.<span class="keyword">vim</span></span><br><span class="line">    <span class="keyword">source</span> $VIMRUNTIME/<span class="keyword">menu</span>.<span class="keyword">vim</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&quot; Disable the alt/meta (&lt;M-*&gt;) mapping on the Windows menu.</span></span><br><span class="line">    <span class="keyword">set</span> winaltkeys=<span class="keyword">no</span></span><br><span class="line"><span class="keyword">endif</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; EasyAlign</span></span><br><span class="line"><span class="comment">&quot; Start interactive EasyAlign in visual mode (e.g. vipga)</span></span><br><span class="line"><span class="keyword">xmap</span> ga <span class="symbol">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Start interactive EasyAlign for a motion/text object (e.g. gaip)</span></span><br><span class="line"><span class="keyword">nmap</span> ga <span class="symbol">&lt;Plug&gt;</span>(EasyAlign)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Auto-paris fly mode</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:AutoPairsFlyMode</span> = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Easy search the select content</span></span><br><span class="line"><span class="keyword">vnoremap</span> // <span class="keyword">y</span>/<span class="symbol">&lt;c-r&gt;</span><span class="comment">&quot;&lt;cr&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ctrlp ignore</span></span><br><span class="line"><span class="comment">&quot; let g:ctrlp_custom_ignore = &#x27;\v[\/](node_modules|target|dist)|(\.(swp|ico|git|svn))$&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Comment with one Space</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:NERDSpaceDelims</span>=<span class="number">1</span></span><br><span class="line"><span class="comment">&quot; NERDCommenter for vue settings</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:ft</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">function!</span> <span class="title">NERDCommenter_before</span><span class="params">()</span></span><br><span class="line">  <span class="keyword">if</span> &amp;ft == <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> <span class="variable">g:ft</span> = <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">let</span> stack = <span class="built_in">synstack</span>(<span class="built_in">line</span>(<span class="string">&#x27;.&#x27;</span>), <span class="keyword">col</span>(<span class="string">&#x27;.&#x27;</span>))</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(stack) &gt; <span class="number">0</span></span><br><span class="line">      <span class="keyword">let</span> syn = <span class="built_in">synIDattr</span>((stack)[<span class="number">0</span>], <span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">      <span class="keyword">if</span> <span class="built_in">len</span>(syn) &gt; <span class="number">0</span></span><br><span class="line">        <span class="keyword">exe</span> <span class="string">&#x27;setf &#x27;</span> . <span class="keyword">substitute</span>(<span class="built_in">tolower</span>(syn), <span class="string">&#x27;^vue_&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">      <span class="keyword">endif</span></span><br><span class="line">    <span class="keyword">endif</span></span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"><span class="keyword">function!</span> <span class="title">NERDCommenter_after</span><span class="params">()</span></span><br><span class="line">  <span class="keyword">if</span> <span class="variable">g:ft</span> == <span class="string">&#x27;vue&#x27;</span></span><br><span class="line">    <span class="keyword">setf</span> vue</span><br><span class="line">    <span class="keyword">let</span> <span class="variable">g:ft</span> = <span class="string">&#x27;&#x27;</span></span><br><span class="line">  <span class="keyword">endif</span></span><br><span class="line"><span class="keyword">endfunction</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:vue_disable_pre_processors</span>=<span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Vim general</span></span><br><span class="line"><span class="keyword">set</span> nofoldenable</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; ==================== Easy Motion ====================</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:EasyMotion_do_mapping</span> = <span class="number">0</span> <span class="comment">&quot; Disable default mappings</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Jump to anywhere you want with minimal keystrokes, with just one key binding.</span></span><br><span class="line"><span class="comment">&quot; `s&#123;char&#125;&#123;label&#125;`</span></span><br><span class="line"><span class="comment">&quot; nmap &lt;space&gt; &lt;Plug&gt;(easymotion-overwin-f)</span></span><br><span class="line"><span class="comment">&quot; or</span></span><br><span class="line"><span class="comment">&quot; `s&#123;char&#125;&#123;char&#125;&#123;label&#125;`</span></span><br><span class="line"><span class="comment">&quot; Need one more keystroke, but on average, it may be more comfortable.</span></span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;space&gt;</span>s <span class="symbol">&lt;Plug&gt;</span>(easymotion-overwin-f2)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; &lt;space&gt;f&#123;char&#125; to move to &#123;char&#125;</span></span><br><span class="line"><span class="keyword">map</span>  <span class="symbol">&lt;space&gt;</span><span class="keyword">f</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-<span class="keyword">bd</span>-<span class="keyword">f</span>)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;space&gt;</span><span class="keyword">f</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-overwin-<span class="keyword">f</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Move to line</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;space&gt;</span>L <span class="symbol">&lt;Plug&gt;</span>(easymotion-<span class="keyword">bd</span>-jk)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;space&gt;</span>L <span class="symbol">&lt;Plug&gt;</span>(easymotion-overwin-<span class="built_in">line</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Move to word</span></span><br><span class="line"><span class="keyword">map</span>  <span class="symbol">&lt;space&gt;</span><span class="keyword">w</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-<span class="keyword">bd</span>-<span class="keyword">w</span>)</span><br><span class="line"><span class="keyword">nmap</span> <span class="symbol">&lt;space&gt;</span><span class="keyword">w</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-overwin-<span class="keyword">w</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; Turn on case insensitive feature</span></span><br><span class="line"><span class="keyword">let</span> <span class="variable">g:EasyMotion_smartcase</span> = <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&quot; JK motions: Line motions</span></span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;space&gt;</span><span class="keyword">j</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-<span class="keyword">j</span>)</span><br><span class="line"><span class="keyword">map</span> <span class="symbol">&lt;space&gt;</span><span class="keyword">k</span> <span class="symbol">&lt;Plug&gt;</span>(easymotion-<span class="keyword">k</span>)</span><br><span class="line"><span class="comment">&quot; ==================== Easy Motion ====================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;Keep search pattern at the center of the screen.&quot;</span></span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> n nzz</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> <span class="keyword">N</span> Nzz</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> * *zz</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> # #zz</span><br><span class="line"><span class="keyword">nnoremap</span> <span class="symbol">&lt;silent&gt;</span> g* g*zz</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Vim - the ubiquitous text editor&lt;/strong&gt;
Vim is a highly configurable text editor for efficiently creating and changing any kind of text. It is included as “vi” with most UNIX systems and with Apple OS X.
Vim 是一个可用于高效率创建或者编辑任意类型文本的高度定制化的文本编辑。它以&amp;quot;vi&amp;quot;命令存在于在大多数的UNIX 操作系统以及Apple OS X 中。&lt;/p&gt;
&lt;p align=&quot;right&quot;&gt;--- https://www.vim.org/&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Vim 作为一个“上古”编辑器，它提供了很多很神奇高效的特性，以至于在现代编辑器/强大的IDE的选择之中有一席之地。
Vim有一个很合我心意的特性，在使用它的时候，完全不需要使用鼠标，眼睛看到哪就可以编辑哪，现在能支持Vim特性的地方我都安装上了对应的插件，例如Chrome的插件：Vimium, Idea的插件：Ideavim。&lt;/p&gt;</summary>
    
    
    
    <category term="Tools" scheme="https://blog.stark-x.cn/categories/Tools/"/>
    
    
    <category term="Vim" scheme="https://blog.stark-x.cn/tags/Vim/"/>
    
    <category term="Coding" scheme="https://blog.stark-x.cn/tags/Coding/"/>
    
  </entry>
  
  <entry>
    <title>使用 kolla-ansible 部署 OpenStack</title>
    <link href="https://blog.stark-x.cn/Solutions/Use-kolla-ansible-deploy-OpenStack.html"/>
    <id>https://blog.stark-x.cn/Solutions/Use-kolla-ansible-deploy-OpenStack.html</id>
    <published>2018-08-01T02:46:54.000Z</published>
    <updated>2022-04-10T13:43:38.872Z</updated>
    
    <content type="html"><![CDATA[<p>使用<code>kolla-ansible</code>部署&quot;all-in-one&quot; OpenStack Queens</p><!-- toc --><!-- Description to show on index here  --><h1>准备</h1><p>此教程在MacOS上完成，在开始前请预留8Gb内存，30G的磁盘空间，因为要下载相关资源文件，最好搭好梯子。</p><h2 id="安装环境">安装环境</h2><ul><li><a href="https://www.virtualbox.org/wiki/Downloads">VirtualBox</a></li><li><a href="https://www.vagrantup.com/">Vagrant</a></li></ul><p>MacOS上强烈推荐使用<a href="https://brew.sh/index_zh-cn">Homebrew</a>, 然后使用命令<code>brew tap caskroom/cask</code>安装cask，安装完毕之后，安装上述两个Application只需要使用<code>brew cask install virtualbox vagrant</code>即可快速完成解压、安装等一系列人手操作。</p><span id="more"></span><h1>下载Vagrantfile并启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span></span><br><span class="line"><span class="built_in">mkdir</span> -p workspace/learning/openstack</span><br><span class="line"><span class="built_in">cd</span> workspace/learning/openstack</span><br><span class="line">curl -sS https://gist.github.com/Stark-X/d1e7ce4b8fcd2ea775249978237939f1</span><br><span class="line">time vagrant up</span><br></pre></td></tr></table></figure><p>Vagrantfile使用了CentOS 7 作为VM的image，还包含了一些初始化操作，如安装docker，花费时间视主机性能、网络而定。<small>* <em>作为参考，笔者使用的15版MBP(2.2Ghz i7 cpu, 16Gb mem, macOS High Sierra v10.13.6)，已有CentOS镜像缓存的情况下，用了10分钟。</em></small></p><h1>配置</h1><h2 id="globals-yml">globals.yml</h2><p>位置：/etc/kolla/globals.yml这个文件是kolla-ansible部署的关键配置文件，网络、组件开启关闭等所有的配置都由此文件决定。以下几个配置只是其中一部分，OpenStack还有更多的参数可以改变，具体查看官方文档。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Valid options are [&#x27;centos&#x27;, &#x27;debian&#x27;, &#x27;oraclelinux&#x27;, &#x27;rhel&#x27;, &#x27;ubuntu&#x27;]</span></span><br><span class="line"><span class="attr">kolla_base_distro:</span> <span class="string">&quot;centos&quot;</span></span><br><span class="line"><span class="comment"># Valid options are [ binary, source ]</span></span><br><span class="line"><span class="attr">kolla_install_type:</span> <span class="string">&quot;source&quot;</span></span><br><span class="line"><span class="comment"># Valid option is Docker repository tag</span></span><br><span class="line"><span class="attr">openstack_release:</span> <span class="string">&quot;queens&quot;</span></span><br><span class="line"><span class="attr">enable_haproxy:</span> <span class="literal">no</span></span><br><span class="line"><span class="attr">network_interface:</span> <span class="string">eth0</span></span><br><span class="line"><span class="attr">network_external_interface:</span> <span class="string">eth1</span></span><br><span class="line"><span class="attr">kolla_internal_vip_address:</span> <span class="number">10.0</span><span class="number">.2</span><span class="number">.15</span></span><br></pre></td></tr></table></figure><h1>部署</h1><h2 id="部署前检查">部署前检查</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 开启调试模式的输出回显，便于查看日志</span></span><br><span class="line"><span class="comment"># ref: https://github.com/ansible/ansible/issues/27078</span></span><br><span class="line"><span class="built_in">export</span> ANSIBLE_STDOUT_CALLBACK=debug</span><br><span class="line">sudo kolla-ansible prechecks -i all-in-one</span><br></pre></td></tr></table></figure><p>这个步骤会检查配置文件设置是否可用，实际上是底层调用了ansible-playbook执行了一系列的操作。</p><h3 id="可能会遇到的问题：">可能会遇到的问题：</h3><h4 id="Error-Hostname-has-to-resolve-to-IP-address-of-api-interface">Error: Hostname has to resolve to IP address of api_interface</h4><p>检查/etc/hosts文件里面的主机名是否为127.0.0.1，更新&quot;kolla_internal_vip_address&quot;在globals.yml文件里的值。</p><h4 id="TASK-haproxy-Checking-if-kolla-internal-vip-address-and-kolla-external-vip-address-are-not-pingable-from-any-node-failed">TASK [haproxy : Checking if kolla_internal_vip_address and kolla_external_vip_address are not pingable from any node] failed</h4><p>因为部署为&quot;all_in_one&quot;，不需要&quot;HA Proxy&quot;，编辑globals.yml，去掉&quot;enable_haproxy&quot;的注释，并把值改为&quot;no&quot;</p><h2 id="部署">部署</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo kolla-ansible deploy -i all-in-one</span><br></pre></td></tr></table></figure><p>部署时间与网络状况挂钩，globals.yml中<code>enable_*</code>为yes的组件越多，时间越长，另外，第一次部署会拉取需要的Docker镜像，可自行架设私有镜像仓库，更改docker配置使用私有镜像仓库，加快部署速度。</p><h2 id="生成命令行控制文件">生成命令行控制文件</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo kolla-ansible post-deploy -i all-in-one</span><br><span class="line"><span class="comment"># 加载环境信息</span></span><br><span class="line">. /etc/kolla/admin-openrc.sh</span><br></pre></td></tr></table></figure><p>执行完毕后，/etc/kolla/admin-openrc.sh 会被生成，使用<code>cat</code>命令可以查看到其中的环境信息，这些信息会被openstack client用于操作OpenStack。</p><h1>Have fun</h1><h2 id="初始化demo环境">初始化demo环境</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建虚拟网络，创建flavor，上传模板等</span></span><br><span class="line">bash /usr/share/kolla-ansible/init-runonce</span><br></pre></td></tr></table></figure><p>执行完毕后，提示用以下命令创建一个demo实例。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openstack server create \\</span><br><span class="line">    --image *** \\</span><br><span class="line">    --flavor m1.tiny \\</span><br><span class="line">    --key-name mykey \\</span><br><span class="line">    --nic net-id=*** \\</span><br><span class="line">    demo1</span><br></pre></td></tr></table></figure><p>创建完毕后，执行<code>openstack console url show demo1</code>查看在线控制台的URL，可通过noVNC连接到实例的shell。<small>*<em>在virtualbox设置nat端口映射</em></small>或者在虚拟机内执行命令<code>sudo ip netns exec [NAME] ssh cirros@&lt;ip&gt;</code>切换network namespace，ssh到目标实例。另外，类似<code>docker logs &lt;container_name&gt;</code>，我们可执行命令<code>openstack console log show demo1</code>查看实例的日志。</p><h2 id="登录Admin">登录Admin</h2><h3 id="获取密码">获取密码</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">grep keystone_admin_password /etc/kolla/passwords.yml</span><br></pre></td></tr></table></figure><h3 id="登录Admin-2">登录Admin</h3><p>Url: <a href="http://localhost:8080/auth/login/">http://localhost:8080/auth/login/</a>User: adminPassword: ***<small>*<em>在virtualbox设置nat端口映射</em></small></p><h1>其它</h1><h2 id="修正错误的配置">修正错误的配置</h2><p>若发现配置错误，需要重新部署，可选择使用以下工具清理环境。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">bash /usr/share/kolla-ansible/tools/stop-containers</span><br><span class="line">bash /usr/share/kolla-ansible/tools/cleanup-containers</span><br><span class="line">bash /usr/share/kolla-ansible/tools/cleanup-host</span><br><span class="line">bash /usr/share/kolla-ansible/tools/cleanup-images</span><br><span class="line"><span class="comment"># Or</span></span><br><span class="line">sudo  kolla-ansible destroy -i all-in-one --yes-i-really-really-mean-it &amp;&amp; kolla-ansible deploy -i all-in-one</span><br></pre></td></tr></table></figure><h2 id="设定的IP无法访问">设定的IP无法访问</h2><p>原本宿主机、虚拟机之间可通过192.168.56.101通讯，部署完成后，无法继续通讯了，这是因为Neutron接管了网络，放置到了不同的namespace，可通过<code>ip netns</code>看到两个新的network namespace，使用命令<code>ip netns exec [NAME] ping &lt;ip&gt;</code>验证。</p><h2 id="OpenStack-Client相关命令">OpenStack Client相关命令</h2><p>以下列出部分OpenStack client的命令，可使用<code>openstack [command] help</code>查看相关的帮助信息。</p><ul><li>openstack flavor list</li><li>openstack server list</li><li>openstack server show [SERVER_NAME]</li><li>…</li></ul><h1>Reference</h1><ul><li>[使用Kolla-Ansible在CentOS 7单节点上部署OpenStack Pike] <a href="https://blog.csdn.net/yan7895566/article/details/79645774">https://blog.csdn.net/yan7895566/article/details/79645774</a></li><li>[利用kolla快速搭建openstack-ocata单节点] <a href="https://www.lijiawang.org/posts/kolla-openstack-ocata.html">https://www.lijiawang.org/posts/kolla-openstack-ocata.html</a></li><li>[CentOS7单节点部署OpenStack-Pike(使用kolla-ansible)] <a href="https://blog.csdn.net/persistvonyao/article/details/80229602#5deploy%E6%97%B6%E6%8A%A5%E9%94%99-please-enable-at-least-one-backend-when-enabling-cinder">https://blog.csdn.net/persistvonyao/article/details/80229602#5deploy时报错-please-enable-at-least-one-backend-when-enabling-cinder</a></li><li>[使用kolla快速部署openstack all-in-one环境] <a href="https://www.sunmite.com/openstack/use-kolla-deploy-openstack-all-in-one.html">https://www.sunmite.com/openstack/use-kolla-deploy-openstack-all-in-one.html</a></li><li>[kolla-ansible Quick Start] <a href="https://docs.openstack.org/kolla-ansible/latest/user/quickstart.html">https://docs.openstack.org/kolla-ansible/latest/user/quickstart.html</a></li></ul>]]></content>
    
    
    <summary type="html">&lt;p&gt;使用&lt;code&gt;kolla-ansible&lt;/code&gt;部署&amp;quot;all-in-one&amp;quot; OpenStack Queens&lt;/p&gt;
&lt;!-- toc --&gt;
&lt;!-- Description to show on index here  --&gt;
&lt;h1&gt;准备&lt;/h1&gt;
&lt;p&gt;此教程在MacOS上完成，在开始前请预留8Gb内存，30G的磁盘空间，因为要下载相关资源文件，最好搭好梯子。&lt;/p&gt;
&lt;h2 id=&quot;安装环境&quot;&gt;安装环境&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://www.virtualbox.org/wiki/Downloads&quot;&gt;VirtualBox&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://www.vagrantup.com/&quot;&gt;Vagrant&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;MacOS上强烈推荐使用&lt;a href=&quot;https://brew.sh/index_zh-cn&quot;&gt;Homebrew&lt;/a&gt;, 然后使用命令&lt;code&gt;brew tap caskroom/cask&lt;/code&gt;安装cask，安装完毕之后，安装上述两个Application只需要使用&lt;code&gt;brew cask install virtualbox vagrant&lt;/code&gt;即可快速完成解压、安装等一系列人手操作。&lt;/p&gt;</summary>
    
    
    
    <category term="Solutions" scheme="https://blog.stark-x.cn/categories/Solutions/"/>
    
    
    <category term="Ops" scheme="https://blog.stark-x.cn/tags/Ops/"/>
    
    <category term="Cloud" scheme="https://blog.stark-x.cn/tags/Cloud/"/>
    
    <category term="OpenStack" scheme="https://blog.stark-x.cn/tags/OpenStack/"/>
    
  </entry>
  
</feed>
